//
// PaymentSchedulesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class PaymentSchedulesAPI {
    /**
     Create payment schedule

     - parameter body: (body)  
     - parameter accountToken: (path) The unique identifier of the credit account for which you want to create a payment schedule.  Send a &#x60;GET&#x60; request to &#x60;/credit/accounts&#x60; to retrieve existing credit account tokens. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createPaymentSchedule(body: PaymentScheduleCreateReq, accountToken: String, completion: @escaping ((_ data: PaymentScheduleResponse?,_ error: Error?) -> Void)) {
        createPaymentScheduleWithRequestBuilder(body: body, accountToken: accountToken).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Create payment schedule
     - POST /credit/accounts/{account_token}/paymentschedules

     - BASIC:
       - type: http
       - name: mqAppAndAccessToken
     - examples: [{contentType=application/json, example={
  "created_time" : "2000-01-23T04:56:07.000+00:00",
  "next_payment_impact_date" : "2000-01-23",
  "updated_time" : "2000-01-23T04:56:07.000+00:00",
  "amount" : 6.027456183070403,
  "amount_category" : "FIXED",
  "account_token" : "account_token",
  "description" : "description",
  "currency_code" : "USD",
  "frequency" : "ONCE",
  "token" : "token",
  "payment_day" : "PAYMENT_DUE_DAY",
  "payment_source_token" : "payment_source_token",
  "status" : "ACTIVE"
}}]
     - parameter body: (body)  
     - parameter accountToken: (path) The unique identifier of the credit account for which you want to create a payment schedule.  Send a &#x60;GET&#x60; request to &#x60;/credit/accounts&#x60; to retrieve existing credit account tokens. 

     - returns: RequestBuilder<PaymentScheduleResponse> 
     */
    open class func createPaymentScheduleWithRequestBuilder(body: PaymentScheduleCreateReq, accountToken: String) -> RequestBuilder<PaymentScheduleResponse> {
        var path = "/credit/accounts/{account_token}/paymentschedules"
        let accountTokenPreEscape = "\(accountToken)"
        let accountTokenPostEscape = accountTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{account_token}", with: accountTokenPostEscape, options: .literal, range: nil)
        let URLString = Marqeta.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<PaymentScheduleResponse>.Type = Marqeta.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**
     Create payment schedule transition

     - parameter body: (body)  
     - parameter accountToken: (path) The unique identifier of the credit account on which to transition a payment schedule.  Send a &#x60;GET&#x60; request to &#x60;/credit/accounts&#x60; to retrieve existing credit account tokens. 
     - parameter paymentScheduleToken: (path) The unique identifier of the payment schedule whose status is to transition.  Send a &#x60;GET&#x60; request to &#x60;/credit/accounts/{account_token}/paymentschedules&#x60; to retrieve existing payment schedule tokens. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createPaymentScheduleTransition(body: PaymentScheduleTransitionCreateReq, accountToken: String, paymentScheduleToken: String, completion: @escaping ((_ data: PaymentScheduleTransitionResponse?,_ error: Error?) -> Void)) {
        createPaymentScheduleTransitionWithRequestBuilder(body: body, accountToken: accountToken, paymentScheduleToken: paymentScheduleToken).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Create payment schedule transition
     - POST /credit/accounts/{account_token}/paymentschedules/{payment_schedule_token}/transitions

     - BASIC:
       - type: http
       - name: mqAppAndAccessToken
     - examples: [{contentType=application/json, example={
  "created_time" : "2000-01-23T04:56:07.000+00:00",
  "updated_time" : "2000-01-23T04:56:07.000+00:00",
  "account_token" : "account_token",
  "payment_schedule_token" : "payment_schedule_token",
  "status" : "ACTIVE",
  "token" : "token"
}}]
     - parameter body: (body)  
     - parameter accountToken: (path) The unique identifier of the credit account on which to transition a payment schedule.  Send a &#x60;GET&#x60; request to &#x60;/credit/accounts&#x60; to retrieve existing credit account tokens. 
     - parameter paymentScheduleToken: (path) The unique identifier of the payment schedule whose status is to transition.  Send a &#x60;GET&#x60; request to &#x60;/credit/accounts/{account_token}/paymentschedules&#x60; to retrieve existing payment schedule tokens. 

     - returns: RequestBuilder<PaymentScheduleTransitionResponse> 
     */
    open class func createPaymentScheduleTransitionWithRequestBuilder(body: PaymentScheduleTransitionCreateReq, accountToken: String, paymentScheduleToken: String) -> RequestBuilder<PaymentScheduleTransitionResponse> {
        var path = "/credit/accounts/{account_token}/paymentschedules/{payment_schedule_token}/transitions"
        let accountTokenPreEscape = "\(accountToken)"
        let accountTokenPostEscape = accountTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{account_token}", with: accountTokenPostEscape, options: .literal, range: nil)
        let paymentScheduleTokenPreEscape = "\(paymentScheduleToken)"
        let paymentScheduleTokenPostEscape = paymentScheduleTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{payment_schedule_token}", with: paymentScheduleTokenPostEscape, options: .literal, range: nil)
        let URLString = Marqeta.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<PaymentScheduleTransitionResponse>.Type = Marqeta.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**
     Retrieve payment schedule

     - parameter accountToken: (path) The unique identifier of the credit account for which you want to retrieve a payment schedule.  Send a &#x60;GET&#x60; request to &#x60;/credit/accounts&#x60; to retrieve existing credit account tokens. 
     - parameter paymentScheduleToken: (path) The unique identifier of the payment schedule that you want to retrieve.  Send a &#x60;GET&#x60; request to &#x60;/credit/accounts/{account_token}/paymentschedules&#x60; to retrieve existing payment schedule tokens. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func retrievePaymentSchedule(accountToken: String, paymentScheduleToken: String, completion: @escaping ((_ data: PaymentScheduleResponse?,_ error: Error?) -> Void)) {
        retrievePaymentScheduleWithRequestBuilder(accountToken: accountToken, paymentScheduleToken: paymentScheduleToken).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Retrieve payment schedule
     - GET /credit/accounts/{account_token}/paymentschedules/{payment_schedule_token}

     - BASIC:
       - type: http
       - name: mqAppAndAccessToken
     - examples: [{contentType=application/json, example={
  "created_time" : "2000-01-23T04:56:07.000+00:00",
  "next_payment_impact_date" : "2000-01-23",
  "updated_time" : "2000-01-23T04:56:07.000+00:00",
  "amount" : 6.027456183070403,
  "amount_category" : "FIXED",
  "account_token" : "account_token",
  "description" : "description",
  "currency_code" : "USD",
  "frequency" : "ONCE",
  "token" : "token",
  "payment_day" : "PAYMENT_DUE_DAY",
  "payment_source_token" : "payment_source_token",
  "status" : "ACTIVE"
}}]
     - parameter accountToken: (path) The unique identifier of the credit account for which you want to retrieve a payment schedule.  Send a &#x60;GET&#x60; request to &#x60;/credit/accounts&#x60; to retrieve existing credit account tokens. 
     - parameter paymentScheduleToken: (path) The unique identifier of the payment schedule that you want to retrieve.  Send a &#x60;GET&#x60; request to &#x60;/credit/accounts/{account_token}/paymentschedules&#x60; to retrieve existing payment schedule tokens. 

     - returns: RequestBuilder<PaymentScheduleResponse> 
     */
    open class func retrievePaymentScheduleWithRequestBuilder(accountToken: String, paymentScheduleToken: String) -> RequestBuilder<PaymentScheduleResponse> {
        var path = "/credit/accounts/{account_token}/paymentschedules/{payment_schedule_token}"
        let accountTokenPreEscape = "\(accountToken)"
        let accountTokenPostEscape = accountTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{account_token}", with: accountTokenPostEscape, options: .literal, range: nil)
        let paymentScheduleTokenPreEscape = "\(paymentScheduleToken)"
        let paymentScheduleTokenPostEscape = paymentScheduleTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{payment_schedule_token}", with: paymentScheduleTokenPostEscape, options: .literal, range: nil)
        let URLString = Marqeta.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<PaymentScheduleResponse>.Type = Marqeta.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Retrieve payment schedule transition

     - parameter accountToken: (path) The unique identifier of the credit account for which you want to retrieve a payment schedule transition.  Send a &#x60;GET&#x60; request to &#x60;/credit/accounts&#x60; to retrieve existing credit account tokens. 
     - parameter paymentScheduleToken: (path) The unique identifier of the payment schedule you want to retrieve.  Send a &#x60;GET&#x60; request to &#x60;/credit/accounts/{account_token}/paymentschedules&#x60; to retrieve existing payment schedule tokens. 
     - parameter token: (path) The unique identifier of the payment schedule transition you want to retrieve.  Send a &#x60;GET&#x60; request to &#x60;/credit/accounts/{account_token}/paymentschedules/{payment_schedule_token}/transitions&#x60; to retrieve existing payment schedule transition tokens. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func retrievePaymentScheduleTransition(accountToken: String, paymentScheduleToken: String, token: String, completion: @escaping ((_ data: PaymentScheduleTransitionResponse?,_ error: Error?) -> Void)) {
        retrievePaymentScheduleTransitionWithRequestBuilder(accountToken: accountToken, paymentScheduleToken: paymentScheduleToken, token: token).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Retrieve payment schedule transition
     - GET /credit/accounts/{account_token}/paymentschedules/{payment_schedule_token}/transitions/{token}

     - BASIC:
       - type: http
       - name: mqAppAndAccessToken
     - examples: [{contentType=application/json, example={
  "created_time" : "2000-01-23T04:56:07.000+00:00",
  "updated_time" : "2000-01-23T04:56:07.000+00:00",
  "account_token" : "account_token",
  "payment_schedule_token" : "payment_schedule_token",
  "status" : "ACTIVE",
  "token" : "token"
}}]
     - parameter accountToken: (path) The unique identifier of the credit account for which you want to retrieve a payment schedule transition.  Send a &#x60;GET&#x60; request to &#x60;/credit/accounts&#x60; to retrieve existing credit account tokens. 
     - parameter paymentScheduleToken: (path) The unique identifier of the payment schedule you want to retrieve.  Send a &#x60;GET&#x60; request to &#x60;/credit/accounts/{account_token}/paymentschedules&#x60; to retrieve existing payment schedule tokens. 
     - parameter token: (path) The unique identifier of the payment schedule transition you want to retrieve.  Send a &#x60;GET&#x60; request to &#x60;/credit/accounts/{account_token}/paymentschedules/{payment_schedule_token}/transitions&#x60; to retrieve existing payment schedule transition tokens. 

     - returns: RequestBuilder<PaymentScheduleTransitionResponse> 
     */
    open class func retrievePaymentScheduleTransitionWithRequestBuilder(accountToken: String, paymentScheduleToken: String, token: String) -> RequestBuilder<PaymentScheduleTransitionResponse> {
        var path = "/credit/accounts/{account_token}/paymentschedules/{payment_schedule_token}/transitions/{token}"
        let accountTokenPreEscape = "\(accountToken)"
        let accountTokenPostEscape = accountTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{account_token}", with: accountTokenPostEscape, options: .literal, range: nil)
        let paymentScheduleTokenPreEscape = "\(paymentScheduleToken)"
        let paymentScheduleTokenPostEscape = paymentScheduleTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{payment_schedule_token}", with: paymentScheduleTokenPostEscape, options: .literal, range: nil)
        let tokenPreEscape = "\(token)"
        let tokenPostEscape = tokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{token}", with: tokenPostEscape, options: .literal, range: nil)
        let URLString = Marqeta.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<PaymentScheduleTransitionResponse>.Type = Marqeta.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter sortBy
     */
    public enum SortBy_retrievePaymentScheduleTransitions: String { 
        case createdtime = "createdTime"
        case createdtime_1 = "-createdTime"
    }

    /**
     Retrieve payment schedule transitions

     - parameter accountToken: (path) The unique identifier of the credit account for which you want to retrieve payment schedule transitions.  Send a &#x60;GET&#x60; request to &#x60;/credit/accounts&#x60; to retrieve existing credit account tokens. 
     - parameter paymentScheduleToken: (path) The unique identifier of the payment schedule for which you want to retrieve transitions.  Send a &#x60;GET&#x60; request to &#x60;/credit/accounts/{account_token}/paymentschedules&#x60; to retrieve existing payment schedule tokens. 
     - parameter count: (query) The number of resources to retrieve. (optional, default to 5)
     - parameter startIndex: (query) Sort order index of the first resource in the returned array. (optional, default to 0)
     - parameter sortBy: (query) Field on which to sort. Prefix the field name with a hyphen (&#x60;-&#x60;) to sort in descending order. Omit the hyphen to sort in ascending order.  *NOTE:* You must sort using system field names such as &#x60;createdTime&#x60;, and not by the field names appearing in response bodies such as &#x60;created_time&#x60;. (optional, default to -createdTime)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func retrievePaymentScheduleTransitions(accountToken: String, paymentScheduleToken: String, count: Int? = nil, startIndex: Int? = nil, sortBy: SortBy_retrievePaymentScheduleTransitions? = nil, completion: @escaping ((_ data: PaymentScheduleTransitionPage?,_ error: Error?) -> Void)) {
        retrievePaymentScheduleTransitionsWithRequestBuilder(accountToken: accountToken, paymentScheduleToken: paymentScheduleToken, count: count, startIndex: startIndex, sortBy: sortBy).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Retrieve payment schedule transitions
     - GET /credit/accounts/{account_token}/paymentschedules/{payment_schedule_token}/transitions

     - BASIC:
       - type: http
       - name: mqAppAndAccessToken
     - examples: [{contentType=application/json, example={
  "is_more" : true,
  "data" : [ {
    "created_time" : "2000-01-23T04:56:07.000+00:00",
    "updated_time" : "2000-01-23T04:56:07.000+00:00",
    "account_token" : "account_token",
    "payment_schedule_token" : "payment_schedule_token",
    "status" : "ACTIVE",
    "token" : "token"
  }, {
    "created_time" : "2000-01-23T04:56:07.000+00:00",
    "updated_time" : "2000-01-23T04:56:07.000+00:00",
    "account_token" : "account_token",
    "payment_schedule_token" : "payment_schedule_token",
    "status" : "ACTIVE",
    "token" : "token"
  } ],
  "start_index" : 1,
  "count" : 0,
  "end_index" : 6
}}]
     - parameter accountToken: (path) The unique identifier of the credit account for which you want to retrieve payment schedule transitions.  Send a &#x60;GET&#x60; request to &#x60;/credit/accounts&#x60; to retrieve existing credit account tokens. 
     - parameter paymentScheduleToken: (path) The unique identifier of the payment schedule for which you want to retrieve transitions.  Send a &#x60;GET&#x60; request to &#x60;/credit/accounts/{account_token}/paymentschedules&#x60; to retrieve existing payment schedule tokens. 
     - parameter count: (query) The number of resources to retrieve. (optional, default to 5)
     - parameter startIndex: (query) Sort order index of the first resource in the returned array. (optional, default to 0)
     - parameter sortBy: (query) Field on which to sort. Prefix the field name with a hyphen (&#x60;-&#x60;) to sort in descending order. Omit the hyphen to sort in ascending order.  *NOTE:* You must sort using system field names such as &#x60;createdTime&#x60;, and not by the field names appearing in response bodies such as &#x60;created_time&#x60;. (optional, default to -createdTime)

     - returns: RequestBuilder<PaymentScheduleTransitionPage> 
     */
    open class func retrievePaymentScheduleTransitionsWithRequestBuilder(accountToken: String, paymentScheduleToken: String, count: Int? = nil, startIndex: Int? = nil, sortBy: SortBy_retrievePaymentScheduleTransitions? = nil) -> RequestBuilder<PaymentScheduleTransitionPage> {
        var path = "/credit/accounts/{account_token}/paymentschedules/{payment_schedule_token}/transitions"
        let accountTokenPreEscape = "\(accountToken)"
        let accountTokenPostEscape = accountTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{account_token}", with: accountTokenPostEscape, options: .literal, range: nil)
        let paymentScheduleTokenPreEscape = "\(paymentScheduleToken)"
        let paymentScheduleTokenPostEscape = paymentScheduleTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{payment_schedule_token}", with: paymentScheduleTokenPostEscape, options: .literal, range: nil)
        let URLString = Marqeta.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "count": count?.encodeToJSON(), 
                        "start_index": startIndex?.encodeToJSON(), 
                        "sort_by": sortBy?.rawValue
        ])


        let requestBuilder: RequestBuilder<PaymentScheduleTransitionPage>.Type = Marqeta.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter sortBy
     */
    public enum SortBy_retrievePaymentSchedules: String { 
        case lastmodifiedtime = "lastModifiedTime"
        case lastmodifiedtime_1 = "-lastModifiedTime"
    }

    /**
     List payment schedules

     - parameter accountToken: (path) The unique identifier of the credit account for which you want to retrieve payment schedules.  Send a &#x60;GET&#x60; request to &#x60;/credit/accounts&#x60; to retrieve existing credit account tokens. 
     - parameter statuses: (query) Status of the payment schedules to retrieve. (optional)
     - parameter frequency: (query) Frequency of the payment schedules to retrieve. (optional)
     - parameter count: (query) The number of resources to retrieve. (optional, default to 5)
     - parameter startIndex: (query) Sort order index of the first resource in the returned array. (optional, default to 0)
     - parameter sortBy: (query) Field on which to sort. Prefix the field name with a hyphen (&#x60;-&#x60;) to sort in descending order. Omit the hyphen to sort in ascending order.  *NOTE:* You must sort using system field names such as &#x60;lastModifiedTime&#x60;, and not by the field names appearing in response bodies such as &#x60;last_modified_time&#x60;. (optional, default to -lastModifiedTime)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func retrievePaymentSchedules(accountToken: String, statuses: [PaymentScheduleStatus]? = nil, frequency: [PaymentScheduleFrequency]? = nil, count: Int? = nil, startIndex: Int? = nil, sortBy: SortBy_retrievePaymentSchedules? = nil, completion: @escaping ((_ data: PaymentSchedulePage?,_ error: Error?) -> Void)) {
        retrievePaymentSchedulesWithRequestBuilder(accountToken: accountToken, statuses: statuses, frequency: frequency, count: count, startIndex: startIndex, sortBy: sortBy).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     List payment schedules
     - GET /credit/accounts/{account_token}/paymentschedules

     - BASIC:
       - type: http
       - name: mqAppAndAccessToken
     - examples: [{contentType=application/json, example={
  "is_more" : true,
  "data" : [ {
    "created_time" : "2000-01-23T04:56:07.000+00:00",
    "next_payment_impact_date" : "2000-01-23",
    "updated_time" : "2000-01-23T04:56:07.000+00:00",
    "amount" : 6.027456183070403,
    "amount_category" : "FIXED",
    "account_token" : "account_token",
    "description" : "description",
    "currency_code" : "USD",
    "frequency" : "ONCE",
    "token" : "token",
    "payment_day" : "PAYMENT_DUE_DAY",
    "payment_source_token" : "payment_source_token",
    "status" : "ACTIVE"
  }, {
    "created_time" : "2000-01-23T04:56:07.000+00:00",
    "next_payment_impact_date" : "2000-01-23",
    "updated_time" : "2000-01-23T04:56:07.000+00:00",
    "amount" : 6.027456183070403,
    "amount_category" : "FIXED",
    "account_token" : "account_token",
    "description" : "description",
    "currency_code" : "USD",
    "frequency" : "ONCE",
    "token" : "token",
    "payment_day" : "PAYMENT_DUE_DAY",
    "payment_source_token" : "payment_source_token",
    "status" : "ACTIVE"
  } ],
  "start_index" : 5,
  "count" : 0,
  "end_index" : 1
}}]
     - parameter accountToken: (path) The unique identifier of the credit account for which you want to retrieve payment schedules.  Send a &#x60;GET&#x60; request to &#x60;/credit/accounts&#x60; to retrieve existing credit account tokens. 
     - parameter statuses: (query) Status of the payment schedules to retrieve. (optional)
     - parameter frequency: (query) Frequency of the payment schedules to retrieve. (optional)
     - parameter count: (query) The number of resources to retrieve. (optional, default to 5)
     - parameter startIndex: (query) Sort order index of the first resource in the returned array. (optional, default to 0)
     - parameter sortBy: (query) Field on which to sort. Prefix the field name with a hyphen (&#x60;-&#x60;) to sort in descending order. Omit the hyphen to sort in ascending order.  *NOTE:* You must sort using system field names such as &#x60;lastModifiedTime&#x60;, and not by the field names appearing in response bodies such as &#x60;last_modified_time&#x60;. (optional, default to -lastModifiedTime)

     - returns: RequestBuilder<PaymentSchedulePage> 
     */
    open class func retrievePaymentSchedulesWithRequestBuilder(accountToken: String, statuses: [PaymentScheduleStatus]? = nil, frequency: [PaymentScheduleFrequency]? = nil, count: Int? = nil, startIndex: Int? = nil, sortBy: SortBy_retrievePaymentSchedules? = nil) -> RequestBuilder<PaymentSchedulePage> {
        var path = "/credit/accounts/{account_token}/paymentschedules"
        let accountTokenPreEscape = "\(accountToken)"
        let accountTokenPostEscape = accountTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{account_token}", with: accountTokenPostEscape, options: .literal, range: nil)
        let URLString = Marqeta.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "statuses": statuses, 
                        "frequency": frequency, 
                        "count": count?.encodeToJSON(), 
                        "start_index": startIndex?.encodeToJSON(), 
                        "sort_by": sortBy?.rawValue
        ])


        let requestBuilder: RequestBuilder<PaymentSchedulePage>.Type = Marqeta.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
}

//
// BalanceRefundsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class BalanceRefundsAPI {
    /**
     Create balance refund

     - parameter body: (body)  
     - parameter accountToken: (path) The unique identifier of the credit account for which you want to create a balance refund.  Send a &#x60;GET&#x60; request to &#x60;/credit/accounts&#x60; to retrieve existing credit account tokens. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createBalanceRefund(body: AccountCreditBalanceRefundReq, accountToken: String, completion: @escaping ((_ data: AccountCreditBalanceRefundResponse?,_ error: Error?) -> Void)) {
        createBalanceRefundWithRequestBuilder(body: body, accountToken: accountToken).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Create balance refund
     - POST /credit/accounts/{account_token}/creditbalancerefunds

     - BASIC:
       - type: http
       - name: mqAppAndAccessToken
     - examples: [{contentType=application/json, example={
  "created_time" : "2000-01-23T04:56:07.000+00:00",
  "updated_time" : "2000-01-23T04:56:07.000+00:00",
  "amount" : 0.8008281904610115,
  "method" : "CHECK",
  "account_token" : "account_token",
  "description" : "description",
  "status" : "INITIATED",
  "token" : "token"
}}]
     - parameter body: (body)  
     - parameter accountToken: (path) The unique identifier of the credit account for which you want to create a balance refund.  Send a &#x60;GET&#x60; request to &#x60;/credit/accounts&#x60; to retrieve existing credit account tokens. 

     - returns: RequestBuilder<AccountCreditBalanceRefundResponse> 
     */
    open class func createBalanceRefundWithRequestBuilder(body: AccountCreditBalanceRefundReq, accountToken: String) -> RequestBuilder<AccountCreditBalanceRefundResponse> {
        var path = "/credit/accounts/{account_token}/creditbalancerefunds"
        let accountTokenPreEscape = "\(accountToken)"
        let accountTokenPostEscape = accountTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{account_token}", with: accountTokenPostEscape, options: .literal, range: nil)
        let URLString = Marqeta.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<AccountCreditBalanceRefundResponse>.Type = Marqeta.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
}

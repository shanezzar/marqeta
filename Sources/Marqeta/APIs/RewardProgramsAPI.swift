//
// RewardProgramsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class RewardProgramsAPI {
    /**
     retrieves all completed redemptions by settlement date

     - parameter settlementStartDate: (query) Settlement start date to filter by. 
     - parameter settlementEndDate: (query) Settlement end date to filter by. 
     - parameter destination: (query) Specifies the destination for external redemptions to filter for. (optional)
     - parameter count: (query) Number of resources to retrieve. (optional, default to 5)
     - parameter startIndex: (query) Sort order index of the first resource in the returned array. (optional, default to 0)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func retrieveRedemptionsBySettlementDate(settlementStartDate: Date, settlementEndDate: Date, destination: DestinationType? = nil, count: Int? = nil, startIndex: Int64? = nil, completion: @escaping ((_ data: RedemptionsBySettlementDatePage?,_ error: Error?) -> Void)) {
        retrieveRedemptionsBySettlementDateWithRequestBuilder(settlementStartDate: settlementStartDate, settlementEndDate: settlementEndDate, destination: destination, count: count, startIndex: startIndex).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     retrieves all completed redemptions by settlement date
     - GET /credit/rewardprograms/redemptions

     - BASIC:
       - type: http
       - name: mqAppAndAccessToken
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "created_time" : "2000-01-23T04:56:07.000+00:00",
    "note" : "note",
    "updated_time" : "2000-01-23T04:56:07.000+00:00",
    "amount" : 0.8008281904610115,
    "redemption_token" : "redemption_token",
    "completion_time" : "2000-01-23T04:56:07.000+00:00",
    "reward_program_token" : "reward_program_token",
    "account_token" : "account_token",
    "destination" : "INVESTMENT",
    "type" : "EXTERNAL",
    "status" : "INITIATED"
  }, {
    "created_time" : "2000-01-23T04:56:07.000+00:00",
    "note" : "note",
    "updated_time" : "2000-01-23T04:56:07.000+00:00",
    "amount" : 0.8008281904610115,
    "redemption_token" : "redemption_token",
    "completion_time" : "2000-01-23T04:56:07.000+00:00",
    "reward_program_token" : "reward_program_token",
    "account_token" : "account_token",
    "destination" : "INVESTMENT",
    "type" : "EXTERNAL",
    "status" : "INITIATED"
  } ]
}}]
     - parameter settlementStartDate: (query) Settlement start date to filter by. 
     - parameter settlementEndDate: (query) Settlement end date to filter by. 
     - parameter destination: (query) Specifies the destination for external redemptions to filter for. (optional)
     - parameter count: (query) Number of resources to retrieve. (optional, default to 5)
     - parameter startIndex: (query) Sort order index of the first resource in the returned array. (optional, default to 0)

     - returns: RequestBuilder<RedemptionsBySettlementDatePage> 
     */
    open class func retrieveRedemptionsBySettlementDateWithRequestBuilder(settlementStartDate: Date, settlementEndDate: Date, destination: DestinationType? = nil, count: Int? = nil, startIndex: Int64? = nil) -> RequestBuilder<RedemptionsBySettlementDatePage> {
        let path = "/credit/rewardprograms/redemptions"
        let URLString = Marqeta.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "destination": destination, 
                        "settlement_start_date": settlementStartDate.encodeToJSON(), 
                        "settlement_end_date": settlementEndDate.encodeToJSON(), 
                        "count": count?.encodeToJSON(), 
                        "start_index": startIndex?.encodeToJSON()
        ])


        let requestBuilder: RequestBuilder<RedemptionsBySettlementDatePage>.Type = Marqeta.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
}

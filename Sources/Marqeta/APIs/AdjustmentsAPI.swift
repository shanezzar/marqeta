//
// AdjustmentsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class AdjustmentsAPI {
    /**
     Create account adjustment

     - parameter body: (body)  
     - parameter accountToken: (path) The unique identifier of the credit account for which you want to create an adjustment.  Send a &#x60;GET&#x60; request to &#x60;/credit/accounts&#x60; to retrieve existing credit account tokens. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createAdjustmentForAccount(body: AccountAdjustmentReq, accountToken: String, completion: @escaping ((_ data: AccountAdjustmentResponse?,_ error: Error?) -> Void)) {
        createAdjustmentForAccountWithRequestBuilder(body: body, accountToken: accountToken).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Create account adjustment
     - POST /credit/accounts/{account_token}/adjustments

     - BASIC:
       - type: http
       - name: mqAppAndAccessToken
     - examples: [{contentType=application/json, example={
  "created_time" : "2000-01-23T04:56:07.000+00:00",
  "note" : "note",
  "reason" : "DISPUTE",
  "amount" : 6.027456183070403,
  "account_token" : "account_token",
  "detail_token" : "detail_token",
  "description" : "description",
  "external_adjustment_id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "original_ledger_entry_token" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "type" : "PURCHASE",
  "currency_code" : "USD",
  "token" : "token",
  "adjustment_detail_object" : { },
  "related_detail_object" : { },
  "related_detail_token" : "related_detail_token"
}}]
     - parameter body: (body)  
     - parameter accountToken: (path) The unique identifier of the credit account for which you want to create an adjustment.  Send a &#x60;GET&#x60; request to &#x60;/credit/accounts&#x60; to retrieve existing credit account tokens. 

     - returns: RequestBuilder<AccountAdjustmentResponse> 
     */
    open class func createAdjustmentForAccountWithRequestBuilder(body: AccountAdjustmentReq, accountToken: String) -> RequestBuilder<AccountAdjustmentResponse> {
        var path = "/credit/accounts/{account_token}/adjustments"
        let accountTokenPreEscape = "\(accountToken)"
        let accountTokenPostEscape = accountTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{account_token}", with: accountTokenPostEscape, options: .literal, range: nil)
        let URLString = Marqeta.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<AccountAdjustmentResponse>.Type = Marqeta.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**
     List account adjustments

     - parameter accountToken: (path) The unique identifier of the credit account for which you want to retrieve adjustments.  Send a &#x60;GET&#x60; request to &#x60;/credit/accounts&#x60; to retrieve existing credit account tokens. 
     - parameter count: (query) The number of resources to retrieve (optional, default to 5)
     - parameter startIndex: (query) Sort order index of the first resource in the returned array. (optional, default to 0)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getAdjustmentsByAccount(accountToken: String, count: Int? = nil, startIndex: Int? = nil, completion: @escaping ((_ data: AccountAdjustmentPage?,_ error: Error?) -> Void)) {
        getAdjustmentsByAccountWithRequestBuilder(accountToken: accountToken, count: count, startIndex: startIndex).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     List account adjustments
     - GET /credit/accounts/{account_token}/adjustments

     - BASIC:
       - type: http
       - name: mqAppAndAccessToken
     - examples: [{contentType=application/json, example={
  "is_more" : true,
  "data" : [ {
    "created_time" : "2000-01-23T04:56:07.000+00:00",
    "note" : "note",
    "reason" : "DISPUTE",
    "amount" : 6.027456183070403,
    "account_token" : "account_token",
    "detail_token" : "detail_token",
    "description" : "description",
    "external_adjustment_id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "original_ledger_entry_token" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "type" : "PURCHASE",
    "currency_code" : "USD",
    "token" : "token",
    "adjustment_detail_object" : { },
    "related_detail_object" : { },
    "related_detail_token" : "related_detail_token"
  }, {
    "created_time" : "2000-01-23T04:56:07.000+00:00",
    "note" : "note",
    "reason" : "DISPUTE",
    "amount" : 6.027456183070403,
    "account_token" : "account_token",
    "detail_token" : "detail_token",
    "description" : "description",
    "external_adjustment_id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "original_ledger_entry_token" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "type" : "PURCHASE",
    "currency_code" : "USD",
    "token" : "token",
    "adjustment_detail_object" : { },
    "related_detail_object" : { },
    "related_detail_token" : "related_detail_token"
  } ],
  "start_index" : 5,
  "count" : 0,
  "end_index" : 1
}}]
     - parameter accountToken: (path) The unique identifier of the credit account for which you want to retrieve adjustments.  Send a &#x60;GET&#x60; request to &#x60;/credit/accounts&#x60; to retrieve existing credit account tokens. 
     - parameter count: (query) The number of resources to retrieve (optional, default to 5)
     - parameter startIndex: (query) Sort order index of the first resource in the returned array. (optional, default to 0)

     - returns: RequestBuilder<AccountAdjustmentPage> 
     */
    open class func getAdjustmentsByAccountWithRequestBuilder(accountToken: String, count: Int? = nil, startIndex: Int? = nil) -> RequestBuilder<AccountAdjustmentPage> {
        var path = "/credit/accounts/{account_token}/adjustments"
        let accountTokenPreEscape = "\(accountToken)"
        let accountTokenPostEscape = accountTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{account_token}", with: accountTokenPostEscape, options: .literal, range: nil)
        let URLString = Marqeta.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "count": count?.encodeToJSON(), 
                        "start_index": startIndex?.encodeToJSON()
        ])


        let requestBuilder: RequestBuilder<AccountAdjustmentPage>.Type = Marqeta.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Retrieve account adjustment

     - parameter accountToken: (path) The unique identifier of the credit account for which you want to retrieve an adjustment.  Send a &#x60;GET&#x60; request to &#x60;/credit/accounts&#x60; to retrieve existing credit account tokens. 
     - parameter adjustmentToken: (path) The unique identifier of the adjustment to retrieve.  Send a &#x60;GET&#x60; request to &#x60;/credit/accounts/{account_token}/adjustments&#x60; to retrieve existing account adjustment tokens. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func retrieveAdjustment(accountToken: String, adjustmentToken: String, completion: @escaping ((_ data: AccountAdjustmentResponse?,_ error: Error?) -> Void)) {
        retrieveAdjustmentWithRequestBuilder(accountToken: accountToken, adjustmentToken: adjustmentToken).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Retrieve account adjustment
     - GET /credit/accounts/{account_token}/adjustments/{adjustment_token}

     - BASIC:
       - type: http
       - name: mqAppAndAccessToken
     - examples: [{contentType=application/json, example={
  "created_time" : "2000-01-23T04:56:07.000+00:00",
  "note" : "note",
  "reason" : "DISPUTE",
  "amount" : 6.027456183070403,
  "account_token" : "account_token",
  "detail_token" : "detail_token",
  "description" : "description",
  "external_adjustment_id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "original_ledger_entry_token" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "type" : "PURCHASE",
  "currency_code" : "USD",
  "token" : "token",
  "adjustment_detail_object" : { },
  "related_detail_object" : { },
  "related_detail_token" : "related_detail_token"
}}]
     - parameter accountToken: (path) The unique identifier of the credit account for which you want to retrieve an adjustment.  Send a &#x60;GET&#x60; request to &#x60;/credit/accounts&#x60; to retrieve existing credit account tokens. 
     - parameter adjustmentToken: (path) The unique identifier of the adjustment to retrieve.  Send a &#x60;GET&#x60; request to &#x60;/credit/accounts/{account_token}/adjustments&#x60; to retrieve existing account adjustment tokens. 

     - returns: RequestBuilder<AccountAdjustmentResponse> 
     */
    open class func retrieveAdjustmentWithRequestBuilder(accountToken: String, adjustmentToken: String) -> RequestBuilder<AccountAdjustmentResponse> {
        var path = "/credit/accounts/{account_token}/adjustments/{adjustment_token}"
        let accountTokenPreEscape = "\(accountToken)"
        let accountTokenPostEscape = accountTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{account_token}", with: accountTokenPostEscape, options: .literal, range: nil)
        let adjustmentTokenPreEscape = "\(adjustmentToken)"
        let adjustmentTokenPostEscape = adjustmentTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{adjustment_token}", with: adjustmentTokenPostEscape, options: .literal, range: nil)
        let URLString = Marqeta.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<AccountAdjustmentResponse>.Type = Marqeta.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
}

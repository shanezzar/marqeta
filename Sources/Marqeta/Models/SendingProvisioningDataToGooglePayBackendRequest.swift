//
// SendingProvisioningDataToGooglePayBackendRequest.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct SendingProvisioningDataToGooglePayBackendRequest: Codable {

    public enum CardSetting: Int, Codable { 
        case _0 = 0
        case _1 = 1
    }
    public enum TokenSetting: Int, Codable { 
        case _0 = 0
        case _1 = 1
    }
    /** Indicates if the Funding Primary Account Number (FPAN) will be attempted.  * *1* - FPAN save will be attempted. * *0* - FPAN save will not be attempted. */
    public var cardSetting: CardSetting
    /** Unique identifier of the card resource. */
    public var cardToken: String
    /** String provided by Google Wallet that identifies the client session. */
    public var clientSessionId: String
    /** Google-assigned string that uniquely identifies both the integrator that is initiating the session and the issuer of the card. */
    public var integratorId: String
    /** String provided by Google Wallet that identifies the Android device that will receive the digital wallet token. */
    public var publicDeviceId: String
    /** String provided by Google Wallet that identifies the device-scoped wallet that receives the digital wallet token. */
    public var publicWalletId: String
    /** String provided by Google Wallet that identifies the backend session. */
    public var serverSessionId: String
    /** Indicates if tokenization will be attempted.  * *1* - Tokenization will be attempted. * *0* - Tokenization will not be attempted. */
    public var tokenSetting: TokenSetting

    public init(cardSetting: CardSetting, cardToken: String, clientSessionId: String, integratorId: String, publicDeviceId: String, publicWalletId: String, serverSessionId: String, tokenSetting: TokenSetting) {
        self.cardSetting = cardSetting
        self.cardToken = cardToken
        self.clientSessionId = clientSessionId
        self.integratorId = integratorId
        self.publicDeviceId = publicDeviceId
        self.publicWalletId = publicWalletId
        self.serverSessionId = serverSessionId
        self.tokenSetting = tokenSetting
    }

    public enum CodingKeys: String, CodingKey { 
        case cardSetting = "card_setting"
        case cardToken = "card_token"
        case clientSessionId = "client_session_id"
        case integratorId = "integrator_id"
        case publicDeviceId = "public_device_id"
        case publicWalletId = "public_wallet_id"
        case serverSessionId = "server_session_id"
        case tokenSetting = "token_setting"
    }

}

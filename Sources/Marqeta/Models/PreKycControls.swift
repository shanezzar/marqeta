//
// PreKycControls.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Contains configuration fields for a number of controls.  *NOTE:* These controls are in effect only if &#x60;kyc_required&#x60; is &#x60;ALWAYS&#x60; or &#x60;CONDITIONAL&#x60; and the account holder has not yet passed KYC. */

public struct PreKycControls: Codable {

    /** Specifies the maximum ledger balance allowed for members of the account holder group. */
    public var balanceMax: Decimal?
    /** If set to &#x60;false&#x60;, this control prohibits an account holder&#x27;s cards from being used at an ATM.  *NOTE:* If a card product&#x27;s &#x60;config.poi.atm&#x60; field is set to &#x60;false&#x60;, associated cards are prohibited from being used at an ATM regardless of this control&#x27;s setting. */
    public var cashAccessEnabled: Bool?
    /** If set to &#x60;true&#x60;, funds can only be loaded from a program funding source.  This restriction applies to GPA orders, peer transfers, and direct deposits, but does not apply to operator adjustments. */
    public var enableNonProgramLoads: Bool?
    /** If set to &#x60;false&#x60;, this control prohibits an account holder from conducting transactions with a non-domestic country code.  *NOTE:* If a card product is configured to prohibit non-domestic transactions, its associated cards are prohibited from such transactions regardless of this control&#x27;s setting. */
    public var internationalEnabled: Bool?
    /** If set to &#x60;false&#x60;, this control prohibits an account holder&#x27;s account from being reloaded with funds after an initial load.  This restriction applies to GPA orders, peer transfers, and direct deposits, but does not apply to operator adjustments. */
    public var isReloadablePreKyc: Bool?

    public init(balanceMax: Decimal? = nil, cashAccessEnabled: Bool? = nil, enableNonProgramLoads: Bool? = nil, internationalEnabled: Bool? = nil, isReloadablePreKyc: Bool? = nil) {
        self.balanceMax = balanceMax
        self.cashAccessEnabled = cashAccessEnabled
        self.enableNonProgramLoads = enableNonProgramLoads
        self.internationalEnabled = internationalEnabled
        self.isReloadablePreKyc = isReloadablePreKyc
    }

    public enum CodingKeys: String, CodingKey { 
        case balanceMax = "balance_max"
        case cashAccessEnabled = "cash_access_enabled"
        case enableNonProgramLoads = "enable_non_program_loads"
        case internationalEnabled = "international_enabled"
        case isReloadablePreKyc = "is_reloadable_pre_kyc"
    }

}

//
// AccountHolderGroupConfig.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Contains configuration fields for the account holder group. */

public struct AccountHolderGroupConfig: Codable {

    public enum KycRequired: String, Codable { 
        case always = "ALWAYS"
        case conditional = "CONDITIONAL"
        case never = "NEVER"
    }
    /** If set to &#x60;false&#x60;, this control prohibits an account holder&#x27;s account from being reloaded with funds after the initial load.  This restriction applies to GPA orders, peer transfers, and direct deposits, but does not apply to operator adjustments. */
    public var isReloadable: Bool?
    /** If set to &#x60;ALWAYS&#x60;, new account holders are created in an &#x60;UNVERIFIED&#x60; status and must pass identity verification (KYC) before they can be active; if set to &#x60;CONDITIONAL&#x60;, new account holders begin in a &#x60;LIMITED&#x60; status and have limited actions available before passing identity verification; if set to &#x60;NEVER&#x60;, new account holders are created in an active state. */
    public var kycRequired: KycRequired?
    public var preKycControls: PreKycControls?
    /** Associates the specified real-time fee group with the members of the account holder group. */
    public var realTimeFeeGroupToken: String?

    public init(isReloadable: Bool? = nil, kycRequired: KycRequired? = nil, preKycControls: PreKycControls? = nil, realTimeFeeGroupToken: String? = nil) {
        self.isReloadable = isReloadable
        self.kycRequired = kycRequired
        self.preKycControls = preKycControls
        self.realTimeFeeGroupToken = realTimeFeeGroupToken
    }

    public enum CodingKeys: String, CodingKey { 
        case isReloadable = "is_reloadable"
        case kycRequired = "kyc_required"
        case preKycControls = "pre_kyc_controls"
        case realTimeFeeGroupToken = "real_time_fee_group_token"
    }

}

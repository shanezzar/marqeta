//
// PaymentCardResponseModel.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct PaymentCardResponseModel: Codable {

    /** Account identifier appended to the payment card number. */
    public var accountSuffix: String
    /** Type of payment card account. */
    public var accountType: String
    /** Specifies whether the account is active. */
    public var active: Bool
    /** Unique identifier of the business account holder. This token is returned if a &#x60;user_token&#x60; is not specified. */
    public var businessToken: String?
    /** Date and time when the resource was created, in UTC. */
    public var createdTime: Date
    /** Payment card expiration date. */
    public var expDate: String
    /** If there are multiple funding sources, this field specifies which source is used by default in funding calls. If there is only one funding source, the system ignores this field and always uses that source. */
    public var isDefaultAccount: Bool
    /** Date and time when the resource was last modified, in UTC. */
    public var lastModifiedTime: Date
    /** Unique identifier of the funding source. */
    public var token: String
    /** Funding source type. */
    public var type: String
    /** Unique identifier of the user account holder. This token is returned if a &#x60;business_token&#x60; is not specified. */
    public var userToken: String?

    public init(accountSuffix: String, accountType: String, active: Bool, businessToken: String? = nil, createdTime: Date, expDate: String, isDefaultAccount: Bool, lastModifiedTime: Date, token: String, type: String, userToken: String? = nil) {
        self.accountSuffix = accountSuffix
        self.accountType = accountType
        self.active = active
        self.businessToken = businessToken
        self.createdTime = createdTime
        self.expDate = expDate
        self.isDefaultAccount = isDefaultAccount
        self.lastModifiedTime = lastModifiedTime
        self.token = token
        self.type = type
        self.userToken = userToken
    }

    public enum CodingKeys: String, CodingKey { 
        case accountSuffix = "account_suffix"
        case accountType = "account_type"
        case active
        case businessToken = "business_token"
        case createdTime = "created_time"
        case expDate = "exp_date"
        case isDefaultAccount = "is_default_account"
        case lastModifiedTime = "last_modified_time"
        case token
        case type
        case userToken = "user_token"
    }

}

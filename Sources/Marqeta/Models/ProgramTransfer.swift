//
// ProgramTransfer.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct ProgramTransfer: Codable {

    /** Amount of program transfer. */
    public var amount: Decimal
    /** Unique identifier of the business. Pass either a &#x60;business_token&#x60; or a &#x60;user_token&#x60;, not both.  Send a &#x60;GET&#x60; request to &#x60;/businesses&#x60; to retrieve business tokens. */
    public var businessToken: String?
    /** Three-digit ISO 4217 currency code. */
    public var currencyCode: String
    /** Contains attributes that define characteristics of one or more fees. */
    public var fees: [FeeModel]?
    /** Memo or note describing the program transfer. */
    public var memo: String?
    /** Comma-delimited list of tags describing the program transfer. */
    public var tags: String?
    /** Unique identifier of the program transfer.  If you do not include a token, the system will generate one automatically. This token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember. This value cannot be updated. */
    public var token: String?
    /** Unique identifier of the program transfer type.  Send a &#x60;GET&#x60; request to &#x60;/programtransfers/types&#x60; to retrieve program transfer type tokens. */
    public var typeToken: String
    /** Unique identifier of the user. Pass either a &#x60;user_token&#x60; or a &#x60;business_token&#x60;, not both.  Send a &#x60;GET&#x60; request to &#x60;/users&#x60; to retrieve business tokens. */
    public var userToken: String?

    public init(amount: Decimal, businessToken: String? = nil, currencyCode: String, fees: [FeeModel]? = nil, memo: String? = nil, tags: String? = nil, token: String? = nil, typeToken: String, userToken: String? = nil) {
        self.amount = amount
        self.businessToken = businessToken
        self.currencyCode = currencyCode
        self.fees = fees
        self.memo = memo
        self.tags = tags
        self.token = token
        self.typeToken = typeToken
        self.userToken = userToken
    }

    public enum CodingKeys: String, CodingKey { 
        case amount
        case businessToken = "business_token"
        case currencyCode = "currency_code"
        case fees
        case memo
        case tags
        case token
        case typeToken = "type_token"
        case userToken = "user_token"
    }

}

//
// ProductResponse.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Specifies shared details for a credit program.  Once set to &#x60;ACTIVE&#x60;, cannot be edited or deleted. */

public struct ProductResponse: Codable {

    /** One or more associated card product tokens. */
    public var cardProductTokens: [String]?
    public var classification: ProductClassification?
    public var config: ProductConfig?
    /** Date and time when the credit product was created on Marqeta&#x27;s credit platform, in UTC. */
    public var createdTime: Date?
    public var creditLine: ProductCreditLine?
    public var currencyCode: CurrencyCode?
    /** Description of the credit product. */
    public var _description: String?
    public var interestCalculation: InterestCalculation?
    public var minPaymentCalculation: ProductMinPaymentCalculation?
    /** Minimum payment, expressed as a flat amount, due on the payment due day. */
    public var minPaymentFlatAmount: Decimal?
    /** Minimum payment, expressed as a percentage of the total statement balance, due on the payment due day. */
    public var minPaymentPercentage: Decimal?
    /** Name of the credit product. */
    public var name: String?
    /** Unique identifier of the parent credit product. */
    public var parentProductToken: String?
    /** Ordered list of balance types to which payments are allocated, from first to last. */
    public var paymentAllocationOrder: [PaymentAllocationOrderEnum]?
    public var productSubType: ProductSubType?
    public var productType: ProductType?
    public var status: ResourceStatus?
    /** Unique identifier of the credit product. */
    public var token: String?
    /** Date and time when the credit product was last updated on Marqeta&#x27;s credit platform, in UTC. */
    public var updatedTime: Date?
    /** One or more usage types for the credit product. */
    public var usage: [BalanceType]?

    public init(cardProductTokens: [String]? = nil, classification: ProductClassification? = nil, config: ProductConfig? = nil, createdTime: Date? = nil, creditLine: ProductCreditLine? = nil, currencyCode: CurrencyCode? = nil, _description: String? = nil, interestCalculation: InterestCalculation? = nil, minPaymentCalculation: ProductMinPaymentCalculation? = nil, minPaymentFlatAmount: Decimal? = nil, minPaymentPercentage: Decimal? = nil, name: String? = nil, parentProductToken: String? = nil, paymentAllocationOrder: [PaymentAllocationOrderEnum]? = nil, productSubType: ProductSubType? = nil, productType: ProductType? = nil, status: ResourceStatus? = nil, token: String? = nil, updatedTime: Date? = nil, usage: [BalanceType]? = nil) {
        self.cardProductTokens = cardProductTokens
        self.classification = classification
        self.config = config
        self.createdTime = createdTime
        self.creditLine = creditLine
        self.currencyCode = currencyCode
        self._description = _description
        self.interestCalculation = interestCalculation
        self.minPaymentCalculation = minPaymentCalculation
        self.minPaymentFlatAmount = minPaymentFlatAmount
        self.minPaymentPercentage = minPaymentPercentage
        self.name = name
        self.parentProductToken = parentProductToken
        self.paymentAllocationOrder = paymentAllocationOrder
        self.productSubType = productSubType
        self.productType = productType
        self.status = status
        self.token = token
        self.updatedTime = updatedTime
        self.usage = usage
    }

    public enum CodingKeys: String, CodingKey { 
        case cardProductTokens = "card_product_tokens"
        case classification
        case config
        case createdTime = "created_time"
        case creditLine = "credit_line"
        case currencyCode = "currency_code"
        case _description = "description"
        case interestCalculation = "interest_calculation"
        case minPaymentCalculation = "min_payment_calculation"
        case minPaymentFlatAmount = "min_payment_flat_amount"
        case minPaymentPercentage = "min_payment_percentage"
        case name
        case parentProductToken = "parent_product_token"
        case paymentAllocationOrder = "payment_allocation_order"
        case productSubType = "product_sub_type"
        case productType = "product_type"
        case status
        case token
        case updatedTime = "updated_time"
        case usage
    }

}

//
// GatewayProgramFundingSourceResponse.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct GatewayProgramFundingSourceResponse: Codable {

    /** Bank account number. */
    public var account: String
    /** Indicates whether the program gateway funding source is active. This field is returned if it exists in the resource. */
    public var active: Bool?
    /** Password for authenticating your environment. */
    public var basicAuthPassword: String
    /** Username for authenticating your environment. */
    public var basicAuthUsername: String
    /** Date and time when the resource was created, in UTC. */
    public var createdTime: Date
    /** Additional custom information included in the HTTP header. */
    public var customHeader: [String:String]
    /** Date and time when the resource was last modified, in UTC. */
    public var lastModifiedTime: Date
    /** Name of the program gateway funding source. */
    public var name: String
    /** Total timeout in milliseconds for gateway processing. */
    public var timeoutMillis: Int64
    /** Unique identifier of the program gateway funding source. */
    public var token: String
    /** URL of the gateway endpoint hosted in your environment, to which &#x60;POST&#x60; requests are submitted by the Marqeta platform. */
    public var url: String
    /** Specifies whether or not to use mutual transport layer security (mTLS) authentication for the funding request. */
    public var useMtls: Bool
    /** Program gateway funding source object version. */
    public var version: String

    public init(account: String, active: Bool? = nil, basicAuthPassword: String, basicAuthUsername: String, createdTime: Date, customHeader: [String:String], lastModifiedTime: Date, name: String, timeoutMillis: Int64, token: String, url: String, useMtls: Bool, version: String) {
        self.account = account
        self.active = active
        self.basicAuthPassword = basicAuthPassword
        self.basicAuthUsername = basicAuthUsername
        self.createdTime = createdTime
        self.customHeader = customHeader
        self.lastModifiedTime = lastModifiedTime
        self.name = name
        self.timeoutMillis = timeoutMillis
        self.token = token
        self.url = url
        self.useMtls = useMtls
        self.version = version
    }

    public enum CodingKeys: String, CodingKey { 
        case account
        case active
        case basicAuthPassword = "basic_auth_password"
        case basicAuthUsername = "basic_auth_username"
        case createdTime = "created_time"
        case customHeader = "custom_header"
        case lastModifiedTime = "last_modified_time"
        case name
        case timeoutMillis = "timeout_millis"
        case token
        case url
        case useMtls = "use_mtls"
        case version
    }

}

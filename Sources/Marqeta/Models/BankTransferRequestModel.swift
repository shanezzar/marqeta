//
// BankTransferRequestModel.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct BankTransferRequestModel: Codable {

    public enum Channel: String, Codable { 
        case api = "API"
        case system = "SYSTEM"
        case admin = "ADMIN"
    }
    public enum StandardEntryClassCode: String, Codable { 
        case web = "WEB"
        case ppd = "PPD"
        case ccd = "CCD"
    }
    public enum TransferSpeed: String, Codable { 
        case standard = "STANDARD"
        case sameDay = "SAME_DAY"
    }
    public enum ModelType: String, Codable { 
        case push = "PUSH"
        case pull = "PULL"
    }
    /** Amount to push or pull. */
    public var amount: Decimal
    /** default &#x3D; API */
    public var channel: Channel?
    public var createdBy: String?
    /** Currency of the push or pull. */
    public var currencyCode: String?
    /** ACH funding source token for the external account. */
    public var fundingSourceToken: String
    /** Additional text describing the ACH transfer. */
    public var memo: String?
    /** Three-letter code identifying the type of entry.  * *WEB* — An internet-initiated entry * *PPD* — Prearranged Payment and Deposit * *CCD* — Cash Concentration and Disbursement */
    public var standardEntryClassCode: StandardEntryClassCode?
    /** Description of the transaction, as it will appear on the receiver&#x27;s bank statement. */
    public var statementDescriptor: String?
    /** Unique identifier of the ACH transfer to retrieve. */
    public var token: String?
    /** Specifies how quickly to initiate the ACH transfer.  *NOTE:* Same-day transfers are limited to a maximum amount of $100,000. */
    public var transferSpeed: TransferSpeed?
    /** Specifies whether the ACH transfer is a push (credit) or pull (debit). */
    public var type: ModelType

    public init(amount: Decimal, channel: Channel? = nil, createdBy: String? = nil, currencyCode: String? = nil, fundingSourceToken: String, memo: String? = nil, standardEntryClassCode: StandardEntryClassCode? = nil, statementDescriptor: String? = nil, token: String? = nil, transferSpeed: TransferSpeed? = nil, type: ModelType) {
        self.amount = amount
        self.channel = channel
        self.createdBy = createdBy
        self.currencyCode = currencyCode
        self.fundingSourceToken = fundingSourceToken
        self.memo = memo
        self.standardEntryClassCode = standardEntryClassCode
        self.statementDescriptor = statementDescriptor
        self.token = token
        self.transferSpeed = transferSpeed
        self.type = type
    }

    public enum CodingKeys: String, CodingKey { 
        case amount
        case channel
        case createdBy = "created_by"
        case currencyCode = "currency_code"
        case fundingSourceToken = "funding_source_token"
        case memo
        case standardEntryClassCode = "standard_entry_class_code"
        case statementDescriptor = "statement_descriptor"
        case token
        case transferSpeed = "transfer_speed"
        case type
    }

}

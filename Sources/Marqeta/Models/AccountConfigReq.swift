//
// AccountConfigReq.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Contains information relevant for configuring an account&#x27;s billing cycle day, payment due day, fees, and more. */

public struct AccountConfigReq: Codable {

    public enum CardLevel: String, Codable { 
        case premium = "PREMIUM"
        case traditional = "TRADITIONAL"
        case na = "NA"
    }
    /** Day of month the billing cycle starts. */
    public var billingCycleDay: Int?
    /** The level of the credit card. */
    public var cardLevel: CardLevel?
    /** A value of &#x60;true&#x60; indicates that the account holder consents to receiving disclosures and statements electronically. */
    public var eDisclosureActive: Bool?
    /** Contains one or more fees associated with the credit account. */
    public var fees: [ConfigFeeScheduleReq]?
    /** Day of month the payment for the previous billing cycle is due. */
    public var paymentDueDay: Int?
    public var paymentHolds: AccountConfigPaymentHolds?
    /** Contains one or more rewards associated with the credit account. */
    public var rewards: [AccountReward]?

    public init(billingCycleDay: Int? = nil, cardLevel: CardLevel? = nil, eDisclosureActive: Bool? = nil, fees: [ConfigFeeScheduleReq]? = nil, paymentDueDay: Int? = nil, paymentHolds: AccountConfigPaymentHolds? = nil, rewards: [AccountReward]? = nil) {
        self.billingCycleDay = billingCycleDay
        self.cardLevel = cardLevel
        self.eDisclosureActive = eDisclosureActive
        self.fees = fees
        self.paymentDueDay = paymentDueDay
        self.paymentHolds = paymentHolds
        self.rewards = rewards
    }

    public enum CodingKeys: String, CodingKey { 
        case billingCycleDay = "billing_cycle_day"
        case cardLevel = "card_level"
        case eDisclosureActive = "e_disclosure_active"
        case fees
        case paymentDueDay = "payment_due_day"
        case paymentHolds = "payment_holds"
        case rewards
    }

}

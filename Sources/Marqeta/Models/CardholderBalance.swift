//
// CardholderBalance.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Returns general purpose account (GPA) balances for a user or business. */

public struct CardholderBalance: Codable {

    /** Ledger balance minus any authorized transactions that have not yet cleared. Also known as the cardholder&#x27;s purchasing power. When using JIT Funding, this balance is usually equal to $0.00. */
    public var availableBalance: Decimal
    /** Contains GPA balance information, organized by currency code. */
    public var balances: [String:CardholderBalance]
    /** Not currently in use. */
    public var cachedBalance: Decimal
    /** Not currently in use. */
    public var creditBalance: Decimal
    /** Three-digit ISO 4217 currency code. */
    public var currencyCode: String
    /** Balance change based on the amount of the transaction. */
    public var impactedAmount: Decimal?
    /** Date and time when the resource was last updated, in UTC. */
    public var lastUpdatedTime: Date
    /** When using standard funding: The funds that are available to spend immediately, including funds from any authorized transactions that have not yet cleared. When using Just-in-Time (JIT) Funding: Authorized funds that are currently on hold, but not yet cleared. */
    public var ledgerBalance: Decimal
    /** ACH loads that have been accepted, but for which the funding time has not yet elapsed. */
    public var pendingCredits: Decimal

    public init(availableBalance: Decimal, balances: [String:CardholderBalance], cachedBalance: Decimal, creditBalance: Decimal, currencyCode: String, impactedAmount: Decimal? = nil, lastUpdatedTime: Date, ledgerBalance: Decimal, pendingCredits: Decimal) {
        self.availableBalance = availableBalance
        self.balances = balances
        self.cachedBalance = cachedBalance
        self.creditBalance = creditBalance
        self.currencyCode = currencyCode
        self.impactedAmount = impactedAmount
        self.lastUpdatedTime = lastUpdatedTime
        self.ledgerBalance = ledgerBalance
        self.pendingCredits = pendingCredits
    }

    public enum CodingKeys: String, CodingKey { 
        case availableBalance = "available_balance"
        case balances
        case cachedBalance = "cached_balance"
        case creditBalance = "credit_balance"
        case currencyCode = "currency_code"
        case impactedAmount = "impacted_amount"
        case lastUpdatedTime = "last_updated_time"
        case ledgerBalance = "ledger_balance"
        case pendingCredits = "pending_credits"
    }

}

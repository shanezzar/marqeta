//
// TransactionCardAcceptor.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Contains information about the merchant. */

public struct TransactionCardAcceptor: Codable {

    /** Card acceptor&#x27;s address. May be returned if the request uses Transaction Model v1 of the Marqeta Core API. Not returned for Transaction Model v2 requests. */
    public var address: String?
    /** Card acceptor&#x27;s city. */
    public var city: String?
    /** Card acceptor&#x27;s country code. May be returned if the request uses Transaction Model v2 of the Marqeta Core API. Not returned for Transaction Model v1 requests. */
    public var countryCode: String?
    /** The merchant&#x27;s country of origin.  A merchant&#x27;s country of origin can be different from the country in which the merchant is located. For example, embassies are physically located in countries that are not their country of origin: a Mexican embassy might be physically located in Singapore, but the country of origin is Mexico.  This field is included when the cardholder conducts a transaction with a government-controlled merchant using a Marqeta-issued card. */
    public var countryOfOrigin: String?
    public var independentSalesOrganizationId: String?
    /** Merchant category code (MCC). */
    public var mcc: String?
    /** An array of &#x60;mcc_groups&#x60;. */
    public var mccGroups: [String]?
    public var merchantTaxId: String?
    /** The merchant identifier. */
    public var mid: String?
    /** Card acceptor&#x27;s name. */
    public var name: String?
    public var networkAssignedId: String?
    /** The merchant identifier on the card network. */
    public var networkMid: String?
    public var paymentFacilitatorId: String?
    /** The name of the payment facilitator, including the sub-merchant identifier, of an original credit transaction. This field is returned when a payment facilitator participates in the transaction. */
    public var paymentFacilitatorName: String?
    public var poi: TerminalModel?
    /** Card acceptor&#x27;s postal code. */
    public var postalCode: String?
    /** Two-character state, province, or territorial abbreviation.  For a complete list of valid state and province abbreviations, see &lt;&lt;/core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations, Valid state, provincial, and territorial abbreviations&gt;&gt;.  *Note*: Non-US merchants may return more than 2 char for this field. */
    public var state: String?
    public var subMerchantId: String?
    /** The name of the transfer service provider of a money transfer original credit transaction. This field is included when a transfer service provider participates in the transaction. */
    public var transferServiceProviderName: String?

    public init(address: String? = nil, city: String? = nil, countryCode: String? = nil, countryOfOrigin: String? = nil, independentSalesOrganizationId: String? = nil, mcc: String? = nil, mccGroups: [String]? = nil, merchantTaxId: String? = nil, mid: String? = nil, name: String? = nil, networkAssignedId: String? = nil, networkMid: String? = nil, paymentFacilitatorId: String? = nil, paymentFacilitatorName: String? = nil, poi: TerminalModel? = nil, postalCode: String? = nil, state: String? = nil, subMerchantId: String? = nil, transferServiceProviderName: String? = nil) {
        self.address = address
        self.city = city
        self.countryCode = countryCode
        self.countryOfOrigin = countryOfOrigin
        self.independentSalesOrganizationId = independentSalesOrganizationId
        self.mcc = mcc
        self.mccGroups = mccGroups
        self.merchantTaxId = merchantTaxId
        self.mid = mid
        self.name = name
        self.networkAssignedId = networkAssignedId
        self.networkMid = networkMid
        self.paymentFacilitatorId = paymentFacilitatorId
        self.paymentFacilitatorName = paymentFacilitatorName
        self.poi = poi
        self.postalCode = postalCode
        self.state = state
        self.subMerchantId = subMerchantId
        self.transferServiceProviderName = transferServiceProviderName
    }

    public enum CodingKeys: String, CodingKey { 
        case address
        case city
        case countryCode = "country_code"
        case countryOfOrigin = "country_of_origin"
        case independentSalesOrganizationId = "independent_sales_organization_id"
        case mcc
        case mccGroups = "mcc_groups"
        case merchantTaxId = "merchant_tax_id"
        case mid
        case name
        case networkAssignedId = "network_assigned_id"
        case networkMid = "network_mid"
        case paymentFacilitatorId = "payment_facilitator_id"
        case paymentFacilitatorName = "payment_facilitator_name"
        case poi
        case postalCode = "postal_code"
        case state
        case subMerchantId = "sub_merchant_id"
        case transferServiceProviderName = "transfer_service_provider_name"
    }

}

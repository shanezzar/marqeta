//
// DelinquencyTransitionResponse.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Contains details of the account&#x27;s delinquency state transition. */

public struct DelinquencyTransitionResponse: Codable {

    /** Unique identifier of the credit account. */
    public var accountToken: String
    /** Number of buckets for the account after the triggering event occurred. */
    public var bucketCount: Decimal?
    /** Date and time when the delinquency state transition was created on Marqeta&#x27;s credit platform, in UTC. */
    public var createdTime: Date
    /** Current amount that is due after the triggering event occurred.  Equivalent to &#x60;current_due&#x60; for the account&#x27;s most recent delinquency bucket. To retrieve delinquency buckets for an account, send a &#x60;GET&#x60; request to &#x60;/credit/accounts/{account_token}/delinquencystate&#x60;. */
    public var currentDue: Decimal?
    /** Date and time when the triggering event impacted the account, in UTC. */
    public var impactTime: Date
    /** A value of &#x60;true&#x60; indicates that the system invalidated and rolled back the delinquency transition.  This is a temporary field that allows Marqeta to handle occasional cases of out-of-order processing. This can occur when two delinquency state transition webhooks are sent near-simultaneously.  For example, if a credit and a payment that bring an account current are made around the same time, two delinquency state transitions are sent very close together. In these cases, one of the transitions is rolled back and invalidated. For the transition that is rolled back, &#x60;is_rolled_back&#x60; is &#x60;true&#x60; and the transition should be ignored.  This field is temporary and to be deprecated when out-of-order processing is addressed in a future release. */
    public var isRolledBack: Bool
    /** The payment due date of the account&#x27;s oldest delinquency bucket, in UTC.  Useful when used with the delinquency state transition&#x27;s &#x60;created_time&#x60; to determine the total number of days a payment is past due. */
    public var oldestPaymentDueDate: Date?
    public var originalStatus: DelinquencyStatus
    public var status: DelinquencyStatus
    /** Unique identifier of the delinquency state transition. */
    public var token: String
    /** Total amount that is due after the triggering event occurred; the sum of &#x60;total_past_due&#x60; and &#x60;current_due&#x60;.  Equivalent to &#x60;total_due&#x60; for the account&#x27;s most recent delinquency bucket. To retrieve delinquency buckets for an account, send a &#x60;GET&#x60; request to &#x60;/credit/accounts/{account_token}/delinquencystate&#x60;. */
    public var totalDue: Decimal?
    /** Total amount that is past due after the triggering event occurred.  Equivalent to &#x60;past_due_carried_forward&#x60; for the account&#x27;s most recent delinquency bucket. To retrieve delinquency buckets for an account, send a &#x60;GET&#x60; request to &#x60;/credit/accounts/{account_token}/delinquencystate&#x60;. */
    public var totalPastDue: Decimal?
    public var transitionTriggerReason: DelinquencyTransitionTriggerReason
    /** Date and time when the triggering event caused the account&#x27;s delinquency state to transition, in UTC.  For &lt;&lt;/core-api/credit-account-journal-entries, journal entries&gt;&gt;, equivalent to &#x60;request_time&#x60;. For &lt;&lt;/core-api/credit-account-statements#listStatementJournalEntries, statement journal entries&gt;&gt;, equivalent to &#x60;impact_time&#x60;, */
    public var transitionTriggerTime: Date
    /** Date and time when the delinquency state transition was last updated on Marqeta&#x27;s credit platform, in UTC. */
    public var updatedTime: Date?

    public init(accountToken: String, bucketCount: Decimal? = nil, createdTime: Date, currentDue: Decimal? = nil, impactTime: Date, isRolledBack: Bool, oldestPaymentDueDate: Date? = nil, originalStatus: DelinquencyStatus, status: DelinquencyStatus, token: String, totalDue: Decimal? = nil, totalPastDue: Decimal? = nil, transitionTriggerReason: DelinquencyTransitionTriggerReason, transitionTriggerTime: Date, updatedTime: Date? = nil) {
        self.accountToken = accountToken
        self.bucketCount = bucketCount
        self.createdTime = createdTime
        self.currentDue = currentDue
        self.impactTime = impactTime
        self.isRolledBack = isRolledBack
        self.oldestPaymentDueDate = oldestPaymentDueDate
        self.originalStatus = originalStatus
        self.status = status
        self.token = token
        self.totalDue = totalDue
        self.totalPastDue = totalPastDue
        self.transitionTriggerReason = transitionTriggerReason
        self.transitionTriggerTime = transitionTriggerTime
        self.updatedTime = updatedTime
    }

    public enum CodingKeys: String, CodingKey { 
        case accountToken = "account_token"
        case bucketCount = "bucket_count"
        case createdTime = "created_time"
        case currentDue = "current_due"
        case impactTime = "impact_time"
        case isRolledBack = "is_rolled_back"
        case oldestPaymentDueDate = "oldest_payment_due_date"
        case originalStatus = "original_status"
        case status
        case token
        case totalDue = "total_due"
        case totalPastDue = "total_past_due"
        case transitionTriggerReason = "transition_trigger_reason"
        case transitionTriggerTime = "transition_trigger_time"
        case updatedTime = "updated_time"
    }

}

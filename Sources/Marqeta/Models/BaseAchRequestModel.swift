//
// BaseAchRequestModel.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct BaseAchRequestModel: Codable {

    public enum AccountType: String, Codable { 
        case checking = "checking"
        case savings = "savings"
        case corporate = "corporate"
        case loan = "loan"
    }
    /** ACH account number. */
    public var accountNumber: String
    /** Type of account. */
    public var accountType: AccountType
    /** Name of the bank holding the account. */
    public var bankName: String?
    /** If there are multiple funding sources, this field specifies which source is used by default in funding calls. If there is only one funding source, the system ignores this field and always uses that source. */
    public var isDefaultAccount: Bool?
    /** Name on the ACH account. */
    public var nameOnAccount: String
    /** Routing number for the ACH account. */
    public var routingNumber: String
    /** Unique identifier of the funding source. If you do not include a token, the system will generate one automatically. This token is necessary for use in other calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember. This value cannot be updated. */
    public var token: String?
    /** Free-form text field for holding notes about verification. This field is returned only if &#x60;verification_override &#x3D; true&#x60;. */
    public var verificationNotes: String?
    /** Allows the ACH funding source to be used regardless of its verification status. */
    public var verificationOverride: Bool?

    public init(accountNumber: String, accountType: AccountType, bankName: String? = nil, isDefaultAccount: Bool? = nil, nameOnAccount: String, routingNumber: String, token: String? = nil, verificationNotes: String? = nil, verificationOverride: Bool? = nil) {
        self.accountNumber = accountNumber
        self.accountType = accountType
        self.bankName = bankName
        self.isDefaultAccount = isDefaultAccount
        self.nameOnAccount = nameOnAccount
        self.routingNumber = routingNumber
        self.token = token
        self.verificationNotes = verificationNotes
        self.verificationOverride = verificationOverride
    }

    public enum CodingKeys: String, CodingKey { 
        case accountNumber = "account_number"
        case accountType = "account_type"
        case bankName = "bank_name"
        case isDefaultAccount = "is_default_account"
        case nameOnAccount = "name_on_account"
        case routingNumber = "routing_number"
        case token
        case verificationNotes = "verification_notes"
        case verificationOverride = "verification_override"
    }

}

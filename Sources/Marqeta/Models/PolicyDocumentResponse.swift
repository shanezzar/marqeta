//
// PolicyDocumentResponse.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Contains information on a document policy. */

public struct PolicyDocumentResponse: Codable {

    public var accountStatement: PolicyDocumentTemplateResponse?
    public var benefitsDisclosurePremium: PolicyDocumentAssetResponse?
    public var benefitsDisclosureTraditional: PolicyDocumentAssetResponse?
    public var cardMemberAgreement: PolicyDocumentAssetResponse?
    /** Date and time when the document policy was created on Marqeta&#x27;s credit platform, in UTC. */
    public var createdTime: Date?
    public var eDisclosure: PolicyDocumentAssetResponse?
    /** Name of the document policy. */
    public var name: String?
    public var noaaMultipleReasonWithDoddFrank: PolicyDocumentTemplateResponse?
    public var noaaSingleReason: PolicyDocumentTemplateResponse?
    public var noaaSingleReasonWithDoddFrank: PolicyDocumentTemplateResponse?
    public var privacyPolicy: PolicyDocumentAssetResponse?
    public var rewardsDisclosure: PolicyDocumentAssetAndTemplateResponse?
    public var summaryOfCreditTerms: PolicyDocumentAssetAndTemplateResponse?
    public var termsSchedule: PolicyDocumentTemplateResponse?
    /** Unique identifier of the document policy. */
    public var token: String?
    /** Date and time when the document policy was last updated on Marqeta&#x27;s credit platform, in UTC. */
    public var updatedTime: Date?

    public init(accountStatement: PolicyDocumentTemplateResponse? = nil, benefitsDisclosurePremium: PolicyDocumentAssetResponse? = nil, benefitsDisclosureTraditional: PolicyDocumentAssetResponse? = nil, cardMemberAgreement: PolicyDocumentAssetResponse? = nil, createdTime: Date? = nil, eDisclosure: PolicyDocumentAssetResponse? = nil, name: String? = nil, noaaMultipleReasonWithDoddFrank: PolicyDocumentTemplateResponse? = nil, noaaSingleReason: PolicyDocumentTemplateResponse? = nil, noaaSingleReasonWithDoddFrank: PolicyDocumentTemplateResponse? = nil, privacyPolicy: PolicyDocumentAssetResponse? = nil, rewardsDisclosure: PolicyDocumentAssetAndTemplateResponse? = nil, summaryOfCreditTerms: PolicyDocumentAssetAndTemplateResponse? = nil, termsSchedule: PolicyDocumentTemplateResponse? = nil, token: String? = nil, updatedTime: Date? = nil) {
        self.accountStatement = accountStatement
        self.benefitsDisclosurePremium = benefitsDisclosurePremium
        self.benefitsDisclosureTraditional = benefitsDisclosureTraditional
        self.cardMemberAgreement = cardMemberAgreement
        self.createdTime = createdTime
        self.eDisclosure = eDisclosure
        self.name = name
        self.noaaMultipleReasonWithDoddFrank = noaaMultipleReasonWithDoddFrank
        self.noaaSingleReason = noaaSingleReason
        self.noaaSingleReasonWithDoddFrank = noaaSingleReasonWithDoddFrank
        self.privacyPolicy = privacyPolicy
        self.rewardsDisclosure = rewardsDisclosure
        self.summaryOfCreditTerms = summaryOfCreditTerms
        self.termsSchedule = termsSchedule
        self.token = token
        self.updatedTime = updatedTime
    }

    public enum CodingKeys: String, CodingKey { 
        case accountStatement = "account_statement"
        case benefitsDisclosurePremium = "benefits_disclosure_premium"
        case benefitsDisclosureTraditional = "benefits_disclosure_traditional"
        case cardMemberAgreement = "card_member_agreement"
        case createdTime = "created_time"
        case eDisclosure = "e_disclosure"
        case name
        case noaaMultipleReasonWithDoddFrank = "noaa_multiple_reason_with_dodd_frank"
        case noaaSingleReason = "noaa_single_reason"
        case noaaSingleReasonWithDoddFrank = "noaa_single_reason_with_dodd_frank"
        case privacyPolicy = "privacy_policy"
        case rewardsDisclosure = "rewards_disclosure"
        case summaryOfCreditTerms = "summary_of_credit_terms"
        case termsSchedule = "terms_schedule"
        case token
        case updatedTime = "updated_time"
    }

}

//
// CommandoModeEnables.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Defines program behavior when Commando Mode is enabled. */

public struct CommandoModeEnables: Codable {

    /** Unique identifiers of the authorization controls enabled while in Commando Mode. */
    public var authControls: [String]?
    /** If set to &#x60;true&#x60;, transactions conducted while Commando Mode is enabled proceed even when the card is suspended. If set to &#x60;false&#x60;, transactions conducted while Commando Mode is enabled are declined if the card is suspended. */
    public var ignoreCardSuspendedState: Bool?
    /** Unique identifier of the program funding source that substitutes for the program gateway funding source upon Commando Mode enablement. */
    public var programFundingSource: String
    /** This field is not currently in use. */
    public var useCacheBalance: Bool?
    /** Unique identifiers of the velocity controls enabled while in Commando Mode.  Velocity controls that are enabled in Commando Mode are inactive until a Commando Mode event occurs. When Commando Mode velocity controls are activated, they conform to the &#x60;velocity_window&#x60; specified in that velocity control. For example, a &#x60;velocity_window&#x60; of &#x60;DAY&#x60; is one calendar day starting at 00:00:00 UTC. If a Commando Mode event occurs at 11:59:59 UTC, the &#x60;DAY&#x60; window includes all transactions that occurred between 00:00:00 and 11:59:59 on that calendar day. */
    public var velocityControls: [String]?

    public init(authControls: [String]? = nil, ignoreCardSuspendedState: Bool? = nil, programFundingSource: String, useCacheBalance: Bool? = nil, velocityControls: [String]? = nil) {
        self.authControls = authControls
        self.ignoreCardSuspendedState = ignoreCardSuspendedState
        self.programFundingSource = programFundingSource
        self.useCacheBalance = useCacheBalance
        self.velocityControls = velocityControls
    }

    public enum CodingKeys: String, CodingKey { 
        case authControls = "auth_controls"
        case ignoreCardSuspendedState = "ignore_card_suspended_state"
        case programFundingSource = "program_funding_source"
        case useCacheBalance = "use_cache_balance"
        case velocityControls = "velocity_controls"
    }

}

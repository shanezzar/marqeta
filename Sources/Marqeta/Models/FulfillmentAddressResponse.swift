//
// FulfillmentAddressResponse.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Specifies a fulfillment shipping or return address. */

public struct FulfillmentAddressResponse: Codable {

    /** Number and street of the address.  This field is returned if it exists in the resource. */
    public var address1: String?
    /** Additional address information.  This field is returned if it exists in the resource. */
    public var address2: String?
    /** City of the address.  This field is returned if it exists in the resource. */
    public var city: String?
    /** Country of the address.  This field is returned if it exists in the resource. */
    public var country: String?
    /** First name of the addressee.  This field is returned if it exists in the resource. */
    public var firstName: String?
    /** Last name of the addressee.  This field is returned if it exists in the resource. */
    public var lastName: String?
    /** Middle name of the addressee.  This field is returned if it exists in the resource. */
    public var middleName: String?
    /** Telephone number of the addressee.  This field is returned if it exists in the resource. */
    public var phone: String?
    /** Postal code of the address.  This field is returned if it exists in the resource. */
    public var postalCode: String?
    /** State or province of the address.  This field is returned if it exists in the resource. */
    public var state: String?
    /** United States ZIP code of the address.  This field is returned if it exists in the resource. */
    public var zip: String?

    public init(address1: String? = nil, address2: String? = nil, city: String? = nil, country: String? = nil, firstName: String? = nil, lastName: String? = nil, middleName: String? = nil, phone: String? = nil, postalCode: String? = nil, state: String? = nil, zip: String? = nil) {
        self.address1 = address1
        self.address2 = address2
        self.city = city
        self.country = country
        self.firstName = firstName
        self.lastName = lastName
        self.middleName = middleName
        self.phone = phone
        self.postalCode = postalCode
        self.state = state
        self.zip = zip
    }

    public enum CodingKeys: String, CodingKey { 
        case address1
        case address2
        case city
        case country
        case firstName = "first_name"
        case lastName = "last_name"
        case middleName = "middle_name"
        case phone
        case postalCode = "postal_code"
        case state
        case zip
    }

}

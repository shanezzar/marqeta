//
// ChargebackResponse.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Contains the chargeback object associated with this transaction if a chargeback has been initiated. */

public struct ChargebackResponse: Codable {

    public enum Channel: String, Codable { 
        case gateway = "GATEWAY"
        case gatewayAutomated = "GATEWAY_AUTOMATED"
        case issuer = "ISSUER"
        case issuerAutomated = "ISSUER_AUTOMATED"
    }
    public enum Network: String, Codable { 
        case marqeta = "MARQETA"
        case discover = "DISCOVER"
        case mastercard = "MASTERCARD"
        case pulse = "PULSE"
        case visa = "VISA"
    }
    public enum State: String, Codable { 
        case initiated = "INITIATED"
        case representment = "REPRESENTMENT"
        case prearbitration = "PREARBITRATION"
        case arbitration = "ARBITRATION"
        case caseWon = "CASE_WON"
        case caseLost = "CASE_LOST"
        case networkRejected = "NETWORK_REJECTED"
        case withdrawn = "WITHDRAWN"
    }
    /** Amount of the chargeback. */
    public var amount: Decimal
    /** Channel the chargeback came through. */
    public var channel: Channel
    /** Date and time when the chargeback was created. Not returned for transactions when the associated chargeback is in the &#x60;INITIATED&#x60; state. */
    public var createdTime: Date
    /** Whether to credit the user for the chargeback amount. */
    public var creditUser: Bool
    /** Date and time when the chargeback was last modified. Not returned for transactions when the associated chargeback is in the &#x60;INITIATED&#x60; state. */
    public var lastModifiedTime: Date
    /** Additional comments about the chargeback. */
    public var memo: String?
    /** Network handling the chargeback. */
    public var network: Network
    /** Network-assigned identifier of the chargeback. */
    public var networkCaseId: String?
    /** Identifies the standardized reason for the chargeback. */
    public var reasonCode: String?
    /** State of the case. */
    public var state: State
    /** Unique identifier of the chargeback. */
    public var token: String
    /** Unique identifier of the transaction being charged back. */
    public var transactionToken: String

    public init(amount: Decimal, channel: Channel, createdTime: Date, creditUser: Bool, lastModifiedTime: Date, memo: String? = nil, network: Network, networkCaseId: String? = nil, reasonCode: String? = nil, state: State, token: String, transactionToken: String) {
        self.amount = amount
        self.channel = channel
        self.createdTime = createdTime
        self.creditUser = creditUser
        self.lastModifiedTime = lastModifiedTime
        self.memo = memo
        self.network = network
        self.networkCaseId = networkCaseId
        self.reasonCode = reasonCode
        self.state = state
        self.token = token
        self.transactionToken = transactionToken
    }

    public enum CodingKeys: String, CodingKey { 
        case amount
        case channel
        case createdTime = "created_time"
        case creditUser = "credit_user"
        case lastModifiedTime = "last_modified_time"
        case memo
        case network
        case networkCaseId = "network_case_id"
        case reasonCode = "reason_code"
        case state
        case token
        case transactionToken = "transaction_token"
    }

}

//
// MsaReturns.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct MsaReturns: Codable {

    public var active: Bool
    public var aggregatedBalances: MsaAggregatedBalances
    public var amount: Decimal
    public var businessToken: String?
    public var campaignToken: String
    /** yyyy-MM-ddTHH:mm:ssZ */
    public var createdTime: Date
    public var currencyCode: String
    /** yyyy-MM-ddThh:mm:ssZ */
    public var endDate: Date?
    public var funding: Funding
    /** yyyy-MM-ddTHH:mm:ssZ */
    public var lastModifiedTime: Date
    /** yyyy-MM-ddThh:mm:ssZ */
    public var lastTransactionDate: Date
    public var orderBalances: MsaBalances
    public var originalOrderToken: String
    public var rewardAmount: Decimal
    public var rewardTriggerAmount: Decimal
    /** yyyy-MM-ddThh:mm:ssZ */
    public var startDate: Date?
    public var token: String?
    public var transactionToken: String
    public var unloadedAmount: Decimal?
    public var userToken: String?

    public init(active: Bool, aggregatedBalances: MsaAggregatedBalances, amount: Decimal, businessToken: String? = nil, campaignToken: String, createdTime: Date, currencyCode: String, endDate: Date? = nil, funding: Funding, lastModifiedTime: Date, lastTransactionDate: Date, orderBalances: MsaBalances, originalOrderToken: String, rewardAmount: Decimal, rewardTriggerAmount: Decimal, startDate: Date? = nil, token: String? = nil, transactionToken: String, unloadedAmount: Decimal? = nil, userToken: String? = nil) {
        self.active = active
        self.aggregatedBalances = aggregatedBalances
        self.amount = amount
        self.businessToken = businessToken
        self.campaignToken = campaignToken
        self.createdTime = createdTime
        self.currencyCode = currencyCode
        self.endDate = endDate
        self.funding = funding
        self.lastModifiedTime = lastModifiedTime
        self.lastTransactionDate = lastTransactionDate
        self.orderBalances = orderBalances
        self.originalOrderToken = originalOrderToken
        self.rewardAmount = rewardAmount
        self.rewardTriggerAmount = rewardTriggerAmount
        self.startDate = startDate
        self.token = token
        self.transactionToken = transactionToken
        self.unloadedAmount = unloadedAmount
        self.userToken = userToken
    }

    public enum CodingKeys: String, CodingKey { 
        case active
        case aggregatedBalances = "aggregated_balances"
        case amount
        case businessToken = "business_token"
        case campaignToken = "campaign_token"
        case createdTime = "created_time"
        case currencyCode = "currency_code"
        case endDate = "end_date"
        case funding
        case lastModifiedTime = "last_modified_time"
        case lastTransactionDate = "last_transaction_date"
        case orderBalances = "order_balances"
        case originalOrderToken = "original_order_token"
        case rewardAmount = "reward_amount"
        case rewardTriggerAmount = "reward_trigger_amount"
        case startDate = "start_date"
        case token
        case transactionToken = "transaction_token"
        case unloadedAmount = "unloaded_amount"
        case userToken = "user_token"
    }

}

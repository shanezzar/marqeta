//
// TransactionOptions.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct TransactionOptions: Codable {

    public var additionalData: String?
    public var cardExpirationDateYymm: String?
    public var databaseTransactionTimeout: Int?
    public var encryptionKeyId: String?
    public var isAsync: Bool?
    public var preAuthTimeLimit: String?
    public var sendExpirationDate: Bool?
    public var sendTrackData: Bool?
    public var transactionTimeoutThresholdSeconds: Int64?
    public var transactionToken: String?

    public init(additionalData: String? = nil, cardExpirationDateYymm: String? = nil, databaseTransactionTimeout: Int? = nil, encryptionKeyId: String? = nil, isAsync: Bool? = nil, preAuthTimeLimit: String? = nil, sendExpirationDate: Bool? = nil, sendTrackData: Bool? = nil, transactionTimeoutThresholdSeconds: Int64? = nil, transactionToken: String? = nil) {
        self.additionalData = additionalData
        self.cardExpirationDateYymm = cardExpirationDateYymm
        self.databaseTransactionTimeout = databaseTransactionTimeout
        self.encryptionKeyId = encryptionKeyId
        self.isAsync = isAsync
        self.preAuthTimeLimit = preAuthTimeLimit
        self.sendExpirationDate = sendExpirationDate
        self.sendTrackData = sendTrackData
        self.transactionTimeoutThresholdSeconds = transactionTimeoutThresholdSeconds
        self.transactionToken = transactionToken
    }

    public enum CodingKeys: String, CodingKey { 
        case additionalData = "additional_data"
        case cardExpirationDateYymm = "card_expiration_date_yymm"
        case databaseTransactionTimeout = "database_transaction_timeout"
        case encryptionKeyId = "encryption_key_id"
        case isAsync = "is_async"
        case preAuthTimeLimit = "pre_auth_time_limit"
        case sendExpirationDate = "send_expiration_date"
        case sendTrackData = "send_track_data"
        case transactionTimeoutThresholdSeconds = "transaction_timeout_threshold_seconds"
        case transactionToken = "transaction_token"
    }

}

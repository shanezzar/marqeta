//
// CardTransitionResponse.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct CardTransitionResponse: Codable {

    public enum Channel: String, Codable { 
        case api = "API"
        case ivr = "IVR"
        case fraud = "FRAUD"
        case admin = "ADMIN"
        case system = "SYSTEM"
    }
    public enum FulfillmentStatus: String, Codable { 
        case issued = "ISSUED"
        case ordered = "ORDERED"
        case rejected = "REJECTED"
        case shipped = "SHIPPED"
        case delivered = "DELIVERED"
        case digitallyPresented = "DIGITALLY_PRESENTED"
    }
    public enum ReasonCode: String, Codable { 
        case _00 = "00"
        case _01 = "01"
        case _02 = "02"
        case _03 = "03"
        case _04 = "04"
        case _05 = "05"
        case _06 = "06"
        case _07 = "07"
        case _08 = "08"
        case _09 = "09"
        case _10 = "10"
        case _11 = "11"
        case _12 = "12"
        case _13 = "13"
        case _14 = "14"
        case _15 = "15"
        case _16 = "16"
        case _17 = "17"
        case _18 = "18"
        case _19 = "19"
        case _20 = "20"
        case _21 = "21"
        case _22 = "22"
        case _23 = "23"
        case _24 = "24"
        case _25 = "25"
        case _26 = "26"
        case _27 = "27"
        case _28 = "28"
        case _29 = "29"
        case _30 = "30"
        case _31 = "31"
    }
    public enum State: String, Codable { 
        case active = "ACTIVE"
        case suspended = "SUSPENDED"
        case terminated = "TERMINATED"
        case unactivated = "UNACTIVATED"
    }
    public enum ModelType: String, Codable { 
        case fulfillmentIssued = "fulfillment.issued"
        case stateActivated = "state.activated"
        case stateSuspended = "state.suspended"
        case stateReinstated = "state.reinstated"
        case stateTerminated = "state.terminated"
        case stateLimited = "state.limited"
        case fulfillmentOrdered = "fulfillment.ordered"
        case fulfillmentRejected = "fulfillment.rejected"
        case fulfillmentShipped = "fulfillment.shipped"
        case fulfillmentDelivered = "fulfillment.delivered"
        case fulfillmentDigitallyPresented = "fulfillment.digitally_presented"
    }
    /** The barcode printed on the card, expressed as digits. */
    public var barcode: String
    /** The unique identifier of the bulk card order. */
    public var bulkIssuanceToken: String?
    public var card: CardMetadata?
    /** Unique identifier of the card product. */
    public var cardProductToken: String
    /** Unique identifier of the card. */
    public var cardToken: String
    /** The mechanism by which the transition was initiated.  * *ADMIN* - Indicates that the card transition was initiated through the Marqeta Dashboard. * *API* - Indicates that the card transition was initiated by you through the Core API. Use this value when creating a card transition with an API &#x60;POST&#x60; request. * *FRAUD* - Indicates that either Marqeta or the card network has determined that the card is fraudulent. * *IVR* - Indicates that the card transition was initiated through your Interactive Voice Response system. * *SYSTEM* - Indicates that the card transition was initiated by Marqeta. For example, Marqeta suspended the card due to excessive failed personal identification number (PIN) entries. */
    public var channel: Channel
    /** Date and time when the resource was created, in UTC. */
    public var createdTime: Date?
    /** A value of &#x60;true&#x60; indicates that you requested expedited processing of the card from your card fulfillment provider. */
    public var expedite: Bool?
    /** Expiration date in &#x60;MMyy&#x60; format. */
    public var expiration: String
    /** Expiration date and time in UTC format. */
    public var expirationTime: String
    public var fulfillment: CardFulfillmentRequest?
    /** Provides status information about the card related to order and delivery.  The possible fulfillment states are:  * *ISSUED:* Initial state of all newly created/issued cards * *ORDERED:* Card ordered through card fulfillment provider * *REJECTED:* Card rejected by card fulfillment provider * *SHIPPED:* Card shipped by card fulfillment provider * *DELIVERED:* Card delivered by the card fulfillment provider. * *DIGITALLY_PRESENTED:* Card digitally presented using the &#x60;/cards/{token}/showpan&#x60; endpoint; does not affect the delivery of physical cards */
    public var fulfillmentStatus: FulfillmentStatus
    /** Last four digits of the card primary account number (PAN). */
    public var lastFour: String
    /** Reissues the specified (\&quot;source\&quot;) card with a new primary account number (PAN). */
    public var newPanFromCardToken: String?
    /** Primary account number (PAN) of the card. */
    public var pan: String
    /** Specifies if the personal identification number (PIN) has been set for the card. */
    public var pinIsSet: Bool
    /** Additional information about the state change. */
    public var reason: String?
    /** A standard code describing the reason for the transition:  * *00:* Object activated for the first time * *01:* Requested by you * *02:* Inactivity over time * *03:* This address cannot accept mail or the addressee is unknown * *04:* Negative account balance * *05:* Account under review * *06:* Suspicious activity was identified * *07:* Activity outside the program parameters was identified * *08:* Confirmed fraud was identified * *09:* Matched with an Office of Foreign Assets Control list * *10:* Card was reported lost * *11:* Card information was cloned * *12:* Account or card information was compromised * *13:* Temporary status change while on hold/leave * *14:* Initiated by Marqeta * *15:* Initiated by issuer * *16:* Card expired * *17:* Failed KYC * *18:* Changed to &#x60;ACTIVE&#x60; because information was properly validated * *19:* Changed to &#x60;ACTIVE&#x60; because account activity was properly validated * *20:* Change occurred prior to the normalization of reason codes * *21:* Initiated by a third party, often a digital wallet provider * *22:* PIN retry limit reached * *23:* Card was reported stolen * *24:* Address issue * *25:* Name issue * *26:* SSN issue * *27:* DOB issue * *28:* Email issue * *29:* Phone issue * *30:* Account/fulfillment mismatch * *31:* Other reason */
    public var reasonCode: ReasonCode?
    /** Reissues the specified (\&quot;source\&quot;) card. */
    public var reissuePanFromCardToken: String?
    /** Indicates the state of the card. */
    public var state: State
    /** Unique identifier of the card transition. */
    public var token: String
    /** This field cannot be set directly using the &#x60;/cardtransitions&#x60; endpoint. A card transition&#x27;s &#x60;type&#x60; is managed by the Marqeta platform, based on the before and after state of the transition, as specified in the request&#x27;s &#x60;state&#x60; field.  This field appears only when populated by the card fulfillment provider. The &#x60;type&#x60; field&#x27;s possible values are:  * *fulfillment.delivered:* Card was delivered by the card fulfillment provider * *fulfillment.digitally_presented:* Card was digitally presented using the &#x60;/cards/{token}/showpan&#x60; endpoint; does not affect the delivery of physical cards * *fulfillment.issued:* Card was created/issued * *fulfillment.ordered:* Card was ordered from the card fulfillment provider * *fulfillment.rejected:* Card was rejected by the card fulfillment provider * *fulfillment.shipped:* Card was shipped by the card fulfillment provider * *state.activated:* Card was activated * *state.limited:* Card was limited * *state.reinstated:* Card was reinstated from a suspended state * *state.suspended:* Card was suspended * *state.terminated:* Card was terminated  //Also appears in /core-api/event-types#_card_transition_events */
    public var type: ModelType
    public var user: CardholderMetadata?
    /** Unique identifier of the cardholder. */
    public var userToken: String
    public var validations: ValidationsResponse?

    public init(barcode: String, bulkIssuanceToken: String? = nil, card: CardMetadata? = nil, cardProductToken: String, cardToken: String, channel: Channel, createdTime: Date? = nil, expedite: Bool? = nil, expiration: String, expirationTime: String, fulfillment: CardFulfillmentRequest? = nil, fulfillmentStatus: FulfillmentStatus, lastFour: String, newPanFromCardToken: String? = nil, pan: String, pinIsSet: Bool, reason: String? = nil, reasonCode: ReasonCode? = nil, reissuePanFromCardToken: String? = nil, state: State, token: String, type: ModelType, user: CardholderMetadata? = nil, userToken: String, validations: ValidationsResponse? = nil) {
        self.barcode = barcode
        self.bulkIssuanceToken = bulkIssuanceToken
        self.card = card
        self.cardProductToken = cardProductToken
        self.cardToken = cardToken
        self.channel = channel
        self.createdTime = createdTime
        self.expedite = expedite
        self.expiration = expiration
        self.expirationTime = expirationTime
        self.fulfillment = fulfillment
        self.fulfillmentStatus = fulfillmentStatus
        self.lastFour = lastFour
        self.newPanFromCardToken = newPanFromCardToken
        self.pan = pan
        self.pinIsSet = pinIsSet
        self.reason = reason
        self.reasonCode = reasonCode
        self.reissuePanFromCardToken = reissuePanFromCardToken
        self.state = state
        self.token = token
        self.type = type
        self.user = user
        self.userToken = userToken
        self.validations = validations
    }

    public enum CodingKeys: String, CodingKey { 
        case barcode
        case bulkIssuanceToken = "bulk_issuance_token"
        case card
        case cardProductToken = "card_product_token"
        case cardToken = "card_token"
        case channel
        case createdTime = "created_time"
        case expedite
        case expiration
        case expirationTime = "expiration_time"
        case fulfillment
        case fulfillmentStatus = "fulfillment_status"
        case lastFour = "last_four"
        case newPanFromCardToken = "new_pan_from_card_token"
        case pan
        case pinIsSet = "pin_is_set"
        case reason
        case reasonCode = "reason_code"
        case reissuePanFromCardToken = "reissue_pan_from_card_token"
        case state
        case token
        case type
        case user
        case userToken = "user_token"
        case validations
    }

}

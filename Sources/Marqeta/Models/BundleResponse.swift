//
// BundleResponse.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Contains information on a bundle. */

public struct BundleResponse: Codable {

    public var aprPolicyDetail: PolicyAprResponse?
    /** Unique identifier of the bundle&#x27;s APR policy. */
    public var aprPolicyToken: String?
    /** Date and time when the bundle was created on Marqeta&#x27;s credit platform, in UTC. */
    public var createdTime: Date?
    public var creditProductPolicyDetail: PolicyProductResponse?
    /** Unique identifier of the bundle&#x27;s credit product policy. */
    public var creditProductPolicyToken: String?
    /** Description of the bundle. */
    public var _description: String?
    public var documentPolicyDetail: PolicyDocumentResponse?
    /** Unique identifier of the bundle&#x27;s document policy. */
    public var documentPolicyToken: String?
    public var feePolicyDetail: PolicyFeeResponse?
    /** Unique identifier of the bundle&#x27;s fee policy. */
    public var feePolicyToken: String?
    /** Name of the bundle. */
    public var name: String?
    public var offerPolicyDetail: PolicyOfferResponse?
    /** Unique identifier of the bundle&#x27;s offer policy. */
    public var offerPolicyToken: String?
    public var rewardPolicyDetail: PolicyRewardResponse?
    /** Unique identifier of the bundle&#x27;s reward policy. */
    public var rewardPolicyToken: String?
    public var status: BundleResourceStatus?
    /** Unique identifier of the bundle. */
    public var token: String?
    /** Date and time when the bundle was last updated on Marqeta&#x27;s credit platform, in UTC. */
    public var updatedTime: Date?

    public init(aprPolicyDetail: PolicyAprResponse? = nil, aprPolicyToken: String? = nil, createdTime: Date? = nil, creditProductPolicyDetail: PolicyProductResponse? = nil, creditProductPolicyToken: String? = nil, _description: String? = nil, documentPolicyDetail: PolicyDocumentResponse? = nil, documentPolicyToken: String? = nil, feePolicyDetail: PolicyFeeResponse? = nil, feePolicyToken: String? = nil, name: String? = nil, offerPolicyDetail: PolicyOfferResponse? = nil, offerPolicyToken: String? = nil, rewardPolicyDetail: PolicyRewardResponse? = nil, rewardPolicyToken: String? = nil, status: BundleResourceStatus? = nil, token: String? = nil, updatedTime: Date? = nil) {
        self.aprPolicyDetail = aprPolicyDetail
        self.aprPolicyToken = aprPolicyToken
        self.createdTime = createdTime
        self.creditProductPolicyDetail = creditProductPolicyDetail
        self.creditProductPolicyToken = creditProductPolicyToken
        self._description = _description
        self.documentPolicyDetail = documentPolicyDetail
        self.documentPolicyToken = documentPolicyToken
        self.feePolicyDetail = feePolicyDetail
        self.feePolicyToken = feePolicyToken
        self.name = name
        self.offerPolicyDetail = offerPolicyDetail
        self.offerPolicyToken = offerPolicyToken
        self.rewardPolicyDetail = rewardPolicyDetail
        self.rewardPolicyToken = rewardPolicyToken
        self.status = status
        self.token = token
        self.updatedTime = updatedTime
    }

    public enum CodingKeys: String, CodingKey { 
        case aprPolicyDetail = "apr_policy_detail"
        case aprPolicyToken = "apr_policy_token"
        case createdTime = "created_time"
        case creditProductPolicyDetail = "credit_product_policy_detail"
        case creditProductPolicyToken = "credit_product_policy_token"
        case _description = "description"
        case documentPolicyDetail = "document_policy_detail"
        case documentPolicyToken = "document_policy_token"
        case feePolicyDetail = "fee_policy_detail"
        case feePolicyToken = "fee_policy_token"
        case name
        case offerPolicyDetail = "offer_policy_detail"
        case offerPolicyToken = "offer_policy_token"
        case rewardPolicyDetail = "reward_policy_detail"
        case rewardPolicyToken = "reward_policy_token"
        case status
        case token
        case updatedTime = "updated_time"
    }

}

//
// FundingAccountResponseModel.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct FundingAccountResponseModel: Codable {

    /** Account identifier appended to the bank account number. This field is returned if it exists in the resource. */
    public var accountSuffix: String?
    /** Type of account. This field is returned if it exists in the resource. */
    public var accountType: String?
    /** Specifies whether the account is active. This field is returned if it exists in the resource. */
    public var active: Bool?
    /** Unique identifier of the business account holder. This token is returned if a &#x60;user_token&#x60; is not specified. */
    public var businessToken: String?
    /** Date and time when the resource was created, in UTC. */
    public var createdTime: Date
    /** Date and time when the account was sent for verification, in UTC.  This field is returned if it exists in the resource. */
    public var dateSentForVerification: Date?
    /** Date and time when the account was verified, in UTC.  This field is returned if it exists in the resource. */
    public var dateVerified: Date?
    /** Payment card expiration date. This field is returned if it exists in the resource. */
    public var expDate: String?
    /** If there are multiple funding sources, this field specifies which source is used by default in funding calls. If there is only one funding source, the system ignores this field and always uses that source.  This field is returned if it exists in the resource. */
    public var isDefaultAccount: Bool?
    /** Date and time when the resource was last modified, in UTC. */
    public var lastModifiedTime: Date
    public var linkPartnerAccountReferenceToken: String?
    /** Name on the account. This field is returned if it exists in the resource. */
    public var nameOnAccount: String?
    public var partner: String?
    /** Unique identifier of the funding source. This field is returned if it exists in the resource. */
    public var token: String?
    /** Funding source type. */
    public var type: String?
    /** Unique identifier of the user account holder. This token is returned if a &#x60;business_token&#x60; is not specified. */
    public var userToken: String?
    /** Free-form text field for holding notes about verification. This field is returned only if &#x60;verification_override &#x3D; true&#x60;. */
    public var verificationNotes: String?
    /** Allows the ACH funding source to be used regardless of its verification status. */
    public var verificationOverride: Bool?
    /** Account verification status. This field is returned if it exists in the resource. */
    public var verificationStatus: String?

    public init(accountSuffix: String? = nil, accountType: String? = nil, active: Bool? = nil, businessToken: String? = nil, createdTime: Date, dateSentForVerification: Date? = nil, dateVerified: Date? = nil, expDate: String? = nil, isDefaultAccount: Bool? = nil, lastModifiedTime: Date, linkPartnerAccountReferenceToken: String? = nil, nameOnAccount: String? = nil, partner: String? = nil, token: String? = nil, type: String? = nil, userToken: String? = nil, verificationNotes: String? = nil, verificationOverride: Bool? = nil, verificationStatus: String? = nil) {
        self.accountSuffix = accountSuffix
        self.accountType = accountType
        self.active = active
        self.businessToken = businessToken
        self.createdTime = createdTime
        self.dateSentForVerification = dateSentForVerification
        self.dateVerified = dateVerified
        self.expDate = expDate
        self.isDefaultAccount = isDefaultAccount
        self.lastModifiedTime = lastModifiedTime
        self.linkPartnerAccountReferenceToken = linkPartnerAccountReferenceToken
        self.nameOnAccount = nameOnAccount
        self.partner = partner
        self.token = token
        self.type = type
        self.userToken = userToken
        self.verificationNotes = verificationNotes
        self.verificationOverride = verificationOverride
        self.verificationStatus = verificationStatus
    }

    public enum CodingKeys: String, CodingKey { 
        case accountSuffix = "account_suffix"
        case accountType = "account_type"
        case active
        case businessToken = "business_token"
        case createdTime = "created_time"
        case dateSentForVerification = "date_sent_for_verification"
        case dateVerified = "date_verified"
        case expDate = "exp_date"
        case isDefaultAccount = "is_default_account"
        case lastModifiedTime = "last_modified_time"
        case linkPartnerAccountReferenceToken = "link_partner_account_reference_token"
        case nameOnAccount = "name_on_account"
        case partner
        case token
        case type
        case userToken = "user_token"
        case verificationNotes = "verification_notes"
        case verificationOverride = "verification_override"
        case verificationStatus = "verification_status"
    }

}

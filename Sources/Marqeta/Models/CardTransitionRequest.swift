//
// CardTransitionRequest.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct CardTransitionRequest: Codable {

    public enum Channel: String, Codable { 
        case api = "API"
        case ivr = "IVR"
        case fraud = "FRAUD"
        case admin = "ADMIN"
        case system = "SYSTEM"
    }
    public enum ReasonCode: String, Codable { 
        case _00 = "00"
        case _01 = "01"
        case _02 = "02"
        case _03 = "03"
        case _04 = "04"
        case _05 = "05"
        case _06 = "06"
        case _07 = "07"
        case _08 = "08"
        case _09 = "09"
        case _10 = "10"
        case _11 = "11"
        case _12 = "12"
        case _13 = "13"
        case _14 = "14"
        case _15 = "15"
        case _16 = "16"
        case _17 = "17"
        case _18 = "18"
        case _19 = "19"
        case _20 = "20"
        case _21 = "21"
        case _22 = "22"
        case _23 = "23"
        case _24 = "24"
        case _25 = "25"
        case _26 = "26"
        case _27 = "27"
        case _28 = "28"
        case _29 = "29"
        case _30 = "30"
        case _31 = "31"
    }
    public enum State: String, Codable { 
        case active = "ACTIVE"
        case suspended = "SUSPENDED"
        case terminated = "TERMINATED"
    }
    /** Identifies the card whose state will transition. */
    public var cardToken: String
    /** The mechanism by which the transition was initiated.  * *ADMIN* - Indicates that the card transition was initiated through the Marqeta Dashboard. * *API* - Indicates that the card transition was initiated by you through the Core API. Use this value when creating a card transition with an API &#x60;POST&#x60; request. * *FRAUD* - Indicates that either Marqeta or the card network has determined that the card is fraudulent. * *IVR* - Indicates that the card transition was initiated through your Interactive Voice Response system. * *SYSTEM* - Indicates that the card transition was initiated by Marqeta. For example, Marqeta suspended the card due to excessive failed personal identification number (PIN) entries. */
    public var channel: Channel
    /** Additional information about the state change. */
    public var reason: String?
    /** Standard code describing the reason for the transition.  *NOTE:* This field is required if your program uses v2 of the &#x60;user_card_state_version&#x60;, which is a program-specific configuration value that is managed by Marqeta and cannot be accessed via the API. To learn more about the &#x60;user_card_state_version&#x60; program configuration, contact your Marqeta representative.  * *00:* Object activated for the first time * *01:* Requested by you * *02:* Inactivity over time * *03:* This address cannot accept mail or the addressee is unknown * *04:* Negative account balance * *05:* Account under review * *06:* Suspicious activity was identified * *07:* Activity outside the program parameters was identified * *08:* Confirmed fraud was identified * *09:* Matched with an Office of Foreign Assets Control list * *10:* Card was reported lost * *11:* Card information was cloned * *12:* Account or card information was compromised * *13:* Temporary status change while on hold/leave * *14:* Initiated by Marqeta * *15:* Initiated by issuer * *16:* Card expired * *17:* Failed KYC * *18:* Changed to &#x60;ACTIVE&#x60; because information was properly validated * *19:* Changed to &#x60;ACTIVE&#x60; because account activity was properly validated * *20:* Change occurred prior to the normalization of reason codes * *21:* Initiated by a third party, often a digital wallet provider * *22:* PIN retry limit reached * *23:* Card was reported stolen * *24:* Address issue * *25:* Name issue * *26:* SSN issue * *27:* DOB issue * *28:* Email issue * *29:* Phone issue * *30:* Account/fulfillment mismatch * *31:* Other reason */
    public var reasonCode: ReasonCode?
    /** Specifies the new state. */
    public var state: State
    /** Set this field to &#x60;true&#x60; to synchronize the state of the card&#x27;s associated token(s) with the card&#x27;s new state. The digital wallet tokens must be in a valid starting state for the given transition, which will reflect the card&#x27;s state transition. For example, if the card is transitioning from the &#x60;ACTIVE&#x60; state to the &#x60;SUSPENDED&#x60; state, only digital wallet tokens in the &#x60;ACTIVE&#x60; state will be synchronized with the card state transition and therefore be transitioned to the &#x60;SUSPENDED&#x60; state.  Leave this field blank or set it to &#x60;false&#x60; to keep the states of the card and its digital wallet tokens independent. */
    public var syncStateWithDwts: Bool?
    /** Unique identifier of the card transition.  If you do not include a token, the system will generate one automatically. This token is referenced in other API calls, so we recommend that you define a simple string that is easy to remember. This value cannot be updated. */
    public var token: String?
    public var validations: ValidationsRequest?

    public init(cardToken: String, channel: Channel, reason: String? = nil, reasonCode: ReasonCode? = nil, state: State, syncStateWithDwts: Bool? = nil, token: String? = nil, validations: ValidationsRequest? = nil) {
        self.cardToken = cardToken
        self.channel = channel
        self.reason = reason
        self.reasonCode = reasonCode
        self.state = state
        self.syncStateWithDwts = syncStateWithDwts
        self.token = token
        self.validations = validations
    }

    public enum CodingKeys: String, CodingKey { 
        case cardToken = "card_token"
        case channel
        case reason
        case reasonCode = "reason_code"
        case state
        case syncStateWithDwts = "sync_state_with_dwts"
        case token
        case validations
    }

}
